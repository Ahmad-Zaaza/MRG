{"version":3,"sources":["pages/SearchResultsMobile.js"],"names":["SearchResultsMobile","query","useParams","useIntl","locale","formatMessage","React","useState","brandFilters","setBrandFilters","value","label","sortBy","setSortBy","productsPage","setProductsPage","filteredPage","setFilteredPage","filtersApplied","setFiltersApplied","priceFilters","setPriceFilters","filters","setFilters","resultsPerPage","setResultsPerPage","cartMenuOpen","setCartMenuOpen","sortByOpen","setSortByOpen","filtersOpen","setFiltersOpen","useInView","triggerRef","inView","useQuery","page","searchProducts","retry","refetchOnWindowFocus","products","data","productsLoading","isLoading","search","filterProducts","enabled","filteredData","filteredProductsLoading","handleResultPerPageChange","selectedValue","useEffect","length","resultsPerPageOptions","useMemo","className","key","setSideMenuOpen","div","initial","opacity","animate","exit","onClick","filteredProducts","id","resolvePlural","isSearchable","options","onChange","layout","h1","map","item","button","filter","prev","i","type","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","lastPage","marginPagesDisplayed","pageRangeDisplayed","initialPage","disableInitialCallback","onPageChange","scrollIntoView","document","getElementById","body","selected","containerClassName","subContainerClassName","pageLinkClassName","activeClassName","pageClassName","previousClassName","nextClassName","disabledClassName","handleBrandChange","brand","find","handleSortByChange","newArr","push","handleChangePriceInput","e","target","handlePriceChange","values","handleSubmitPrice"],"mappings":"mUAee,SAASA,IAAuB,IAAD,QACpCC,EAAUC,cAAVD,MADoC,EAEVE,cAA1BC,EAFoC,EAEpCA,OAAQC,EAF4B,EAE5BA,cAF4B,EAGJC,IAAMC,SAAS,IAHX,mBAGrCC,EAHqC,KAGvBC,EAHuB,OAIhBH,IAAMC,SAAS,CACzCG,MAAO,SACPC,MAAO,WANmC,mBAIrCC,EAJqC,KAI7BC,EAJ6B,OAQJP,IAAMC,SAAS,GARX,mBAQrCO,EARqC,KAQvBC,EARuB,OASJT,IAAMC,SAAS,GATX,mBASrCS,EATqC,KASvBC,EATuB,OAWAX,IAAMC,UAAS,GAXf,mBAWrCW,EAXqC,KAWrBC,EAXqB,OAYJb,IAAMC,SAAS,CAAC,MAZZ,mBAYrCa,EAZqC,KAYvBC,EAZuB,OAadf,IAAMC,SAAS,IAbD,mBAarCe,EAbqC,KAa5BC,EAb4B,QAcAjB,IAAMC,SAAS,CACzDI,MAAO,GACPD,MAAO,KAhBmC,qBAcrCc,GAdqC,MAcrBC,GAdqB,SAkBJnB,IAAMC,UAAS,GAlBX,qBAkBrCmB,GAlBqC,MAkBvBC,GAlBuB,SAmBRrB,IAAMC,UAAS,GAnBP,qBAmBrCqB,GAnBqC,MAmBzBC,GAnByB,SAoBNvB,IAAMC,UAAS,GApBT,qBAoBrCuB,GApBqC,MAoBxBC,GApBwB,SAqBfC,cArBe,qBAqBrCC,GArBqC,MAqBzBC,GArByB,SAuBWC,YACrD,CAAC,iBAAkB,CAAElC,QAAOmC,KAAMtB,EAAcU,oBAChDa,IACA,CAAEC,OAAO,EAAMC,sBAAsB,IAHzBC,GAvB8B,GAuBpCC,KAA2BC,GAvBS,GAuBpBC,UAvBoB,GA6BuBR,YACjE,CACE,oBACA,CACES,OAAQ3C,EACRO,eACAI,SACAwB,KAAMpB,EACNQ,kBACApB,SACAgB,iBAGJyB,IACA,CAAEP,OAAO,EAAMC,sBAAsB,EAAOO,QAAS5B,IAdzC6B,GA7B8B,GA6BpCN,KAA+BO,GA7BK,GA6BhBL,UAiBtBM,GAA4B,SAAAC,GAChCzB,GAAkByB,IAiFpB5C,IAAM6C,WAAU,WACS,IAAnB7B,EAAQ8B,OACVjC,GAAkB,GAElBA,GAAkB,KAEnB,CAACG,IACJ,IAcM+B,GAAwB/C,IAAMgD,SAClC,iBAAM,CACJ,CACE3C,MAAO,GACPD,MAAO,IAET,CACEC,MAAO,GACPD,MAAO,IAET,CACEC,MAAO,GACPD,MAAO,OAGX,IAEF,OACE,kBAAC,IAAD,KACE,yBAAK6C,UAAU,yBACb,kBAAC,IAAD,KACG7B,IACC,kBAAC,IAAD,CACE8B,IAAI,YACJC,gBAAiB9B,KAGpBD,IACC,kBAAC,IAAOgC,IAAR,CACEF,IAAI,cACJG,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,IACpBE,KAAM,CAAEF,QAAS,GACjBG,QAAS,kBAAMpC,IAAgB,IAC/B4B,UAAU,uBAIbrC,IACO,OAARsB,SAAQ,IAARA,IAAA,UAAAA,GAAUA,gBAAV,eAAoBY,QAAS,IAC5BV,IACAxB,IACa,OAAZ6B,SAAY,IAAZA,IAAA,UAAAA,GAAciB,wBAAd,eAAgCZ,QAAS,IACxCJ,IACC,yBAAKO,UAAU,iBACb,yBAAKA,UAAU,QACb,6BACW,OAARf,SAAQ,IAARA,QAAA,EAAAA,GAAUA,SAASY,QAAS,IAA5B,OAAiCZ,SAAjC,IAAiCA,QAAjC,EAAiCA,GAAUA,SAASY,QAAQ,IA7DzD,WACpB,cAAQZ,SAAR,IAAQA,QAAR,EAAQA,GAAUA,SAASY,QACzB,KAAK,EACH,OAAO/C,EAAc,CAAE4D,GAAI,uBAE7B,KAAK,EACH,OAAO5D,EAAc,CAAE4D,GAAI,uBAE7B,KAAa,OAARzB,SAAQ,IAARA,QAAA,EAAAA,GAAUA,SAASY,QAAS,GAC/B,OAAO/C,EAAc,CAAE4D,GAAI,gCAC7B,QACE,OAAO5D,EAAc,CAAE4D,GAAI,oBAmDdC,GAFH,IAEoB,gCAASjE,KAG/B,yBAAKsD,UAAU,qBACb,wBAAIA,UAAU,yBACXlD,EAAc,CAAE4D,GAAI,qBAEvB,kBAAC,IAAD,CACEE,cAAc,EACdC,QAASf,GACT3C,MAAOc,GACP6C,SAAUpB,GACVM,UAAU,kBAMtB,kBAAC,IAAD,KACE,kBAAC,IAAOG,IAAR,CAAYY,QAAM,EAACf,UAAU,QACP,IAAnBjC,EAAQ8B,QACP,oCACE,kBAAC,IAAOmB,GAAR,CAAWD,QAAM,EAACf,UAAU,uBACzBlD,EAAc,CAAE4D,GAAI,gBADvB,MAGA,kBAAC,IAAOP,IAAR,CAAYY,QAAM,EAACf,UAAU,qBAC1BjC,EAAQkD,KAAI,SAAAC,GACX,OACE,kBAAC,IAAOC,OAAR,CACEJ,QAAM,EACNf,UAAU,2DACVC,IAAKiB,EAAK/D,MACVqD,QAAS,kBA5KHY,EA4K6BF,EA3KvDlD,GAAW,SAAAqD,GACT,OAAOA,EAAKD,QAAO,SAAAE,GAAC,OAAIA,EAAEnE,QAAUiE,EAAOjE,YAEzB,UAAhBiE,EAAOG,MACTrE,GAAgB,SAAAmE,GACd,OAAOA,EAAKD,QAAO,SAAAE,GAAC,OAAIA,EAAElE,QAAUgE,EAAOjE,YAG3B,SAAhBiE,EAAOG,MACTjE,EAAU,CACRH,MAAO,SACPC,MAAO,gBAGS,UAAhBgE,EAAOG,MACTvD,GAAW,SAAAqD,GACT,OAAOA,EAAKD,QAAO,SAAAE,GAAC,MAAe,UAAXA,EAAEC,YAjBJ,IAAAH,IA8KLtE,EAAc,CAAE4D,GAAIQ,EAAKK,OAN5B,MAMwCL,EAAK/D,WAKnD,wBAAI6C,UAAU,YAMtB,kBAAC,IAAD,CACEf,SAAQ,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAUA,SACpBE,gBAAiBA,GACjBf,gBAAiBA,GACjBqC,iBAAgB,OAAEjB,SAAF,IAAEA,QAAF,EAAEA,GAAciB,iBAChChB,wBAAyBA,GACzBf,WAAYA,GACZlB,gBAAiBA,EACjBG,eAAgBA,EAChB+B,0BAA2BA,MAE1B/B,IACO,OAARsB,SAAQ,IAARA,IAAA,UAAAA,GAAUA,gBAAV,eAAoBY,QAAS,IAC5BV,IACAxB,IACa,OAAZ6B,SAAY,IAAZA,IAAA,UAAAA,GAAciB,wBAAd,eAAgCZ,QAAS,IACxCJ,IACC,kBAAC,IAAD,CACE+B,cAAe,kBAAC,IAAD,CAAexB,UAAU,mBACxCyB,UAAW,kBAAC,IAAD,CAAgBzB,UAAU,mBACrC0B,WAAY,MACZC,eAAgB,SAChBC,UACEjE,EAAc,OAAG6B,SAAH,IAAGA,QAAH,EAAGA,GAAcqC,SAAjB,OAA4B5C,SAA5B,IAA4BA,QAA5B,EAA4BA,GAAU4C,SAEtDC,qBAAsB,EACtBC,mBAAoB,EACpBC,YACErE,EAAiBF,EAAe,EAAIF,EAAe,EAErD0E,wBAAwB,EACxBC,aACEvE,EA7NiB,SAAAuB,GAC/BiD,YAAeC,SAASC,eAAe,QAASD,SAASE,MACzD5E,EAAgBwB,EAAKqD,SAAW,IANF,SAAArD,GAC9BiD,YAAeC,SAASC,eAAe,QAASD,SAASE,MACzD9E,EAAgB0B,EAAKqD,SAAW,IAmOpBC,mBAAoB,mBACpBC,sBAAuB,aACvBC,kBAAkB,MAClBC,gBAAiB,yCACjBC,cAAc,0CACdC,kBAAkB,uBAClBC,cAAc,uBACdC,kBAAkB,kBAG1B,kBAAC,IAAD,KACGpE,IACC,kBAAC,IAAD,CACEQ,gBAAiBA,GACjBF,SAAQ,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAUA,SACpBhC,aAAcA,EACd+F,kBAzLc,SAAAC,GACJhG,EAAaiG,MAAK,SAAA5B,GAAC,OAAIA,EAAEZ,KAAOuC,EAAMvC,OAGxDxD,GAAgB,SAAAmE,GACd,OAAOA,EAAKD,QAAO,SAAAE,GAAC,OAAIA,EAAEZ,KAAOuC,EAAMvC,SAEzC1C,GAAW,SAAAqD,GACT,OAAOA,EAAKD,QAAO,SAAAE,GAAC,OAAIA,EAAEnE,QAAU8F,EAAM7F,cAG5CY,GAAW,SAAAqD,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAiB,CAAEE,KAAM,QAASpE,MAAO8F,EAAM7F,YAEjDF,GAAgB,SAAAmE,GACd,MAAM,GAAN,mBAAWA,GAAX,gBAAsB4B,UA2KhBtF,eAAgBA,EAChBW,cAAeA,GACfE,eAAgBA,GAChBD,YAAaA,GACbF,WAAYA,GACZhB,OAAQA,EACR8F,mBA/Me,SAAAxD,GACzB,GAA4B,WAAxBA,EAAcxC,MAKhB,OAJAa,GAAW,SAAAqD,GACT,OAAOA,EAAKD,QAAO,SAAAE,GAAC,MAAe,SAAXA,EAAEC,gBAE5BjE,EAAUqC,GAGZ3B,GAAW,SAAAqD,GACT,IAAI+B,EAAS/B,EAAKD,QAAO,SAAAE,GAAC,MAAe,SAAXA,EAAEC,QAEhC,OADA6B,EAAOC,KAAK,CAAE9B,KAAM,OAAQpE,MAAOwC,EAAcvC,QAC1CgG,KAET9F,EAAUqC,IAmMA2D,uBA7NmB,SAAAC,GACzBA,EAAEC,OAAOrG,MAAQ,GACjBoG,EAAEC,OAAOrG,MAAQ,KACrBW,EAAgB,CAACyF,EAAEC,OAAOrG,SA2NhBsG,kBAjOc,SAAAC,GACxB5F,EAAgB4F,IAiONC,kBA1Nc,WACxB3F,GAAW,SAAAqD,GACT,IAAI+B,EAAS/B,EAAKD,QAAO,SAAAE,GAAC,MAAe,UAAXA,EAAEC,QAEhC,OADA6B,EAAOC,KAAK,CAAE9B,KAAM,QAASpE,MAAM,OAAD,OAASU,EAAa,MACjDuF,MAuNCvF,aAAcA","file":"static/js/26.a07ba5c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\nimport CategoryMobileItemGrid from '../components/CategoryMobile/CategoryMobileItemGrid';\r\nimport SortInfoPanelMobile from '../components/CategoryMobile/SortInfoPanelMobile';\r\nimport Layout from '../components/Layout';\r\nimport { filterProducts, searchProducts } from '../Queries/Queries';\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport SideCartMenuMobile from '../components/SingleProductMobile/SideCartMenuItemMobile';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { scrollIntoView } from 'scroll-js';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { GoChevronLeft, GoChevronRight } from 'react-icons/go';\r\nimport Select from 'react-select';\r\nexport default function SearchResultsMobile() {\r\n  const { query } = useParams();\r\n  const { locale, formatMessage } = useIntl();\r\n  const [brandFilters, setBrandFilters] = React.useState([]);\r\n  const [sortBy, setSortBy] = React.useState({\r\n    value: 'newest',\r\n    label: 'Newest',\r\n  });\r\n  const [productsPage, setProductsPage] = React.useState(1);\r\n  const [filteredPage, setFilteredPage] = React.useState(1);\r\n\r\n  const [filtersApplied, setFiltersApplied] = React.useState(false);\r\n  const [priceFilters, setPriceFilters] = React.useState([10000]);\r\n  const [filters, setFilters] = React.useState([]);\r\n  const [resultsPerPage, setResultsPerPage] = React.useState({\r\n    label: 20,\r\n    value: 20,\r\n  });\r\n  const [cartMenuOpen, setCartMenuOpen] = React.useState(false);\r\n  const [sortByOpen, setSortByOpen] = React.useState(false);\r\n  const [filtersOpen, setFiltersOpen] = React.useState(false);\r\n  const [triggerRef, inView] = useInView();\r\n\r\n  const { data: products, isLoading: productsLoading } = useQuery(\r\n    ['searchProducts', { query, page: productsPage, resultsPerPage }],\r\n    searchProducts,\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n\r\n  const { data: filteredData, isLoading: filteredProductsLoading } = useQuery(\r\n    [\r\n      'filtered-products',\r\n      {\r\n        search: query,\r\n        brandFilters,\r\n        sortBy,\r\n        page: filteredPage,\r\n        resultsPerPage,\r\n        locale,\r\n        priceFilters,\r\n      },\r\n    ],\r\n    filterProducts,\r\n    { retry: true, refetchOnWindowFocus: false, enabled: filtersApplied }\r\n  );\r\n\r\n  const handleResultPerPageChange = selectedValue => {\r\n    setResultsPerPage(selectedValue);\r\n  };\r\n  const handleProductChangePage = data => {\r\n    scrollIntoView(document.getElementById('main'), document.body);\r\n    setProductsPage(data.selected + 1);\r\n  };\r\n  const handleFilteredChangePage = data => {\r\n    scrollIntoView(document.getElementById('main'), document.body);\r\n    setFilteredPage(data.selected + 1);\r\n  };\r\n  const handleRemoveFilters = filter => {\r\n    setFilters(prev => {\r\n      return prev.filter(i => i.value !== filter.value);\r\n    });\r\n    if (filter.type === 'Brand') {\r\n      setBrandFilters(prev => {\r\n        return prev.filter(i => i.label !== filter.value);\r\n      });\r\n    }\r\n    if (filter.type === 'Sort') {\r\n      setSortBy({\r\n        value: 'newest',\r\n        label: 'Newest',\r\n      });\r\n    }\r\n    if (filter.type === 'Price') {\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Price');\r\n      });\r\n    }\r\n  };\r\n  const handlePriceChange = values => {\r\n    setPriceFilters(values);\r\n  };\r\n  const handleChangePriceInput = e => {\r\n    if (e.target.value < 0) return;\r\n    if (e.target.value > 10000) return;\r\n    setPriceFilters([e.target.value]);\r\n  };\r\n  const handleSubmitPrice = () => {\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Price');\r\n      newArr.push({ type: 'Price', value: `Max ${priceFilters[0]}` });\r\n      return newArr;\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = selectedValue => {\r\n    if (selectedValue.value === 'newest') {\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Sort');\r\n      });\r\n      setSortBy(selectedValue);\r\n      return;\r\n    }\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Sort');\r\n      newArr.push({ type: 'Sort', value: selectedValue.label });\r\n      return newArr;\r\n    });\r\n    setSortBy(selectedValue);\r\n  };\r\n  const handleBrandChange = brand => {\r\n    const isAvailable = brandFilters.find(i => i.id === brand.id);\r\n    // if available\r\n    if (isAvailable) {\r\n      setBrandFilters(prev => {\r\n        return prev.filter(i => i.id !== brand.id);\r\n      });\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.value !== brand.label);\r\n      });\r\n    } else {\r\n      setFilters(prev => {\r\n        return [...prev, { type: 'Brand', value: brand.label }];\r\n      });\r\n      setBrandFilters(prev => {\r\n        return [...prev, { ...brand }];\r\n      });\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (filters.length === 0) {\r\n      setFiltersApplied(false);\r\n    } else {\r\n      setFiltersApplied(true);\r\n    }\r\n  }, [filters]);\r\n  const resolvePlural = () => {\r\n    switch (products?.products.length) {\r\n      case 1:\r\n        return formatMessage({ id: 'one-search-results' });\r\n\r\n      case 2:\r\n        return formatMessage({ id: 'two-search-results' });\r\n\r\n      case products?.products.length > 10:\r\n        return formatMessage({ id: 'more-than-10-search-results' });\r\n      default:\r\n        return formatMessage({ id: 'search-results' });\r\n    }\r\n  };\r\n  const resultsPerPageOptions = React.useMemo(\r\n    () => [\r\n      {\r\n        label: 20,\r\n        value: 20,\r\n      },\r\n      {\r\n        label: 30,\r\n        value: 30,\r\n      },\r\n      {\r\n        label: 40,\r\n        value: 40,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <Layout>\r\n      <div className=\"min-h-screen relative\">\r\n        <AnimatePresence>\r\n          {cartMenuOpen && (\r\n            <SideCartMenuMobile\r\n              key=\"side-cart\"\r\n              setSideMenuOpen={setCartMenuOpen}\r\n            />\r\n          )}\r\n          {cartMenuOpen && (\r\n            <motion.div\r\n              key=\"sidecart-bg\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 0.5 }}\r\n              exit={{ opacity: 0 }}\r\n              onClick={() => setCartMenuOpen(false)}\r\n              className=\"side__addCart-bg\"\r\n            ></motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n        {(!filtersApplied &&\r\n          products?.products?.length > 0 &&\r\n          !productsLoading) ||\r\n          (filtersApplied &&\r\n            filteredData?.filteredProducts?.length > 0 &&\r\n            !filteredProductsLoading && (\r\n              <div className=\"border-b mb-1\">\r\n                <div className=\"p-3 \">\r\n                  <h1>\r\n                    {products?.products.length > 2 && products?.products.length}{' '}\r\n                    {resolvePlural()} <strong>{query}</strong>\r\n                  </h1>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <h1 className=\"font-semibold text-sm\">\r\n                    {formatMessage({ id: 'number-per-page' })}\r\n                  </h1>\r\n                  <Select\r\n                    isSearchable={false}\r\n                    options={resultsPerPageOptions}\r\n                    value={resultsPerPage}\r\n                    onChange={handleResultPerPageChange}\r\n                    className=\"mx-2 flex-1\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n        <AnimateSharedLayout>\r\n          <motion.div layout className=\"px-3\">\r\n            {filters.length !== 0 && (\r\n              <>\r\n                <motion.h1 layout className=\" mb-1 font-semibold\">\r\n                  {formatMessage({ id: 'filtered-by' })} :\r\n                </motion.h1>\r\n                <motion.div layout className=\"flex items-center\">\r\n                  {filters.map(item => {\r\n                    return (\r\n                      <motion.button\r\n                        layout\r\n                        className=\"mx-1 py-1 px-3 bg-main-color text-main-text rounded-full\"\r\n                        key={item.value}\r\n                        onClick={() => handleRemoveFilters(item)}\r\n                      >\r\n                        {formatMessage({ id: item.type })} : {item.value}\r\n                      </motion.button>\r\n                    );\r\n                  })}\r\n                </motion.div>\r\n                <hr className=\"my-3\" />\r\n              </>\r\n            )}\r\n          </motion.div>\r\n        </AnimateSharedLayout>\r\n\r\n        <CategoryMobileItemGrid\r\n          products={products?.products}\r\n          productsLoading={productsLoading}\r\n          setCartMenuOpen={setCartMenuOpen}\r\n          filteredProducts={filteredData?.filteredProducts}\r\n          filteredProductsLoading={filteredProductsLoading}\r\n          triggerRef={triggerRef}\r\n          setProductsPage={setProductsPage}\r\n          filtersApplied={filtersApplied}\r\n          handleResultPerPageChange={handleResultPerPageChange}\r\n        />\r\n        {(!filtersApplied &&\r\n          products?.products?.length > 0 &&\r\n          !productsLoading) ||\r\n          (filtersApplied &&\r\n            filteredData?.filteredProducts?.length > 0 &&\r\n            !filteredProductsLoading && (\r\n              <ReactPaginate\r\n                previousLabel={<GoChevronLeft className=\"w-6 h-6 inline\" />}\r\n                nextLabel={<GoChevronRight className=\"w-6 h-6 inline\" />}\r\n                breakLabel={'...'}\r\n                breakClassName={'inline'}\r\n                pageCount={\r\n                  filtersApplied ? filteredData?.lastPage : products?.lastPage\r\n                }\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={2}\r\n                initialPage={\r\n                  filtersApplied ? filteredPage - 1 : productsPage - 1\r\n                }\r\n                disableInitialCallback={true}\r\n                onPageChange={\r\n                  filtersApplied\r\n                    ? handleFilteredChangePage\r\n                    : handleProductChangePage\r\n                }\r\n                containerClassName={'text-center my-2'}\r\n                subContainerClassName={'p-3 inline'}\r\n                pageLinkClassName=\"p-3\"\r\n                activeClassName={'bg-main-color font-bold text-main-text'}\r\n                pageClassName=\" inline-block mx-2 rounded-full text-lg\"\r\n                previousClassName=\"p-3 inline font-bold\"\r\n                nextClassName=\"p-3 inline font-bold\"\r\n                disabledClassName=\"text-gray-500\"\r\n              />\r\n            ))}\r\n        <AnimatePresence>\r\n          {inView && (\r\n            <SortInfoPanelMobile\r\n              productsLoading={productsLoading}\r\n              products={products?.products}\r\n              brandFilters={brandFilters}\r\n              handleBrandChange={handleBrandChange}\r\n              filtersApplied={filtersApplied}\r\n              setSortByOpen={setSortByOpen}\r\n              setFiltersOpen={setFiltersOpen}\r\n              filtersOpen={filtersOpen}\r\n              sortByOpen={sortByOpen}\r\n              sortBy={sortBy}\r\n              handleSortByChange={handleSortByChange}\r\n              handleChangePriceInput={handleChangePriceInput}\r\n              handlePriceChange={handlePriceChange}\r\n              handleSubmitPrice={handleSubmitPrice}\r\n              priceFilters={priceFilters}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}