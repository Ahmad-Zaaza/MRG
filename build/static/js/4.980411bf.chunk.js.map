{"version":3,"sources":["../node_modules/react-range/lib/types.js","../node_modules/react-range/lib/index.js","../node_modules/react-range/lib/utils.js","../node_modules/react-range/lib/Range.js"],"names":["Object","defineProperty","exports","value","Direction","__importDefault","this","mod","__esModule","Range_1","require","Range","default","utils_1","getTrackBackground","useThumbOverlap","relativeValue","types_1","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","react_1","isVertical","direction","Up","Down","translate","element","x","y","style","transform","getStepDecimals","step","decimals","toString","split","isTouchEvent","event","touches","changedTouches","isStepDivisible","min","max","res","parseInt","normalizeValue","index","allowOverlap","values","BIG_NUM","Math","round","prev","next","remainder","floor","closestLowerNum","abs","rounded","decimalPlaces","parseFloat","toFixed","checkBoundaries","RangeError","checkInitialOverlap","slice","every","item","getMargin","window","getComputedStyle","top","bottom","left","right","getPaddingAndBorder","translateThumbs","elements","offsets","rtl","inverter","forEach","getClosestThumbIndex","thumbs","clientX","clientY","thumbIndex","minThumbDistance","getThumbDistance","thumbDistance","schd","fn","lastArgs","frameId","args","_i","requestAnimationFrame","apply","replaceAt","ret","_a","colors","_b","Right","_c","Left","middle","sort","b","map","reduce","acc","point","voidFn","assertUnreachable","Error","getThumbWidth","thumbEl","separator","valueToLabel","ceil","from","children","width","el","elWidth","getBoundingClientRect","innerText","includes","childElementCount","elClone","cloneNode","innerHTML","visibility","document","body","appendChild","removeChild","height","rangeRef","useState","labelStyle","setLabelStyle","labelValue","setLabelValue","useEffect","getThumbs","newStyle","offsets_1","getOffsets","overlaps","buildOverlaps","thumbXWidth","thumbX","siblingIndex","siblingX","siblingWidth","push","Set","getOverlaps","labelValue_1","offsetsX","c","labelValues_1","thumb","join","first","last","lastWidth","indexOf","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","prototype","create","__importStar","result","call","React","INCREASE_KEYS","DECREASE_KEYS","_super","props","_this","trackRef","createRef","thumbRefs","markRefs","state","draggedTrackPos","draggedThumbIndex","thumbZIndexes","fill","t","isChanged","markOffsets","trackElement","current","trackRect","trackPadding","thumbOffsets","thumbRect","thumbMargins","filter","hasAttribute","console","warn","getTargetIndex","e","findIndex","child","target","contains","addTouchEvents","addEventListener","schdOnTouchMove","passive","schdOnEnd","addMouseEvents","schdOnMouseMove","onMouseDownTrack","button","persist","preventDefault","nativeEvent","draggableTrack","some","thumbRef","setState","onMove","focus","onResize","calculateMarkOffsets","onTouchStartTrack","onMouseOrTouchStart","disabled","isTouch","onMouseMove","onTouchMove","onKeyDown","onChange","key","fireOnFinalChange","onKeyUp","trackLength","dX","dY","deltaValue","sign","thumbValue","newValues","newValue","onEnd","removeEventListener","onFinalChange","renderMark","elStyles","trackWidth","trackHeight","paddingLeft","paddingTop","numOfMarks","markHeight","markWidth","markRect","componentDidMount","resizeObserver","ResizeObserver","observe","unobserve","componentDidUpdate","prevProps","componentWillUnmount","render","renderTrack","renderThumb","cursor","onMouseDown","onTouchStart","ref","isDragged","offset","position","marginTop","marginLeft","zIndex","userSelect","touchAction","WebkitUserSelect","MozUserSelect","msUserSelect","tabIndex","undefined","draggable","role","defaultProps","Component"],"mappings":"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","file":"static/js/4.980411bf.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[\"Right\"] = \"to right\";\n    Direction[\"Left\"] = \"to left\";\n    Direction[\"Down\"] = \"to bottom\";\n    Direction[\"Up\"] = \"to top\";\n})(Direction = exports.Direction || (exports.Direction = {}));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Range_1 = __importDefault(require(\"./Range\"));\nexports.Range = Range_1.default;\nvar utils_1 = require(\"./utils\");\nexports.getTrackBackground = utils_1.getTrackBackground;\nexports.useThumbOverlap = utils_1.useThumbOverlap;\nexports.relativeValue = utils_1.relativeValue;\nvar types_1 = require(\"./types\");\nexports.Direction = types_1.Direction;\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar types_1 = require(\"./types\");\nexports.getStepDecimals = function (step) {\n    var decimals = step.toString().split('.')[1];\n    return decimals ? decimals.length : 0;\n};\nfunction isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexports.isTouchEvent = isTouchEvent;\nfunction isStepDivisible(min, max, step) {\n    var res = (max - min) / step;\n    return parseInt(res.toString(), 10) === res;\n}\nexports.isStepDivisible = isStepDivisible;\nfunction normalizeValue(value, index, min, max, step, allowOverlap, values) {\n    var BIG_NUM = 10e10;\n    value = Math.round(value * BIG_NUM) / BIG_NUM;\n    if (!allowOverlap) {\n        var prev = values[index - 1];\n        var next = values[index + 1];\n        if (prev && prev > value)\n            return prev;\n        if (next && next < value)\n            return next;\n    }\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    // `remainder` is a difference between the given value and a full step value\n    // that is closest lower to the given value and is in the range between the min value\n    // and the given value\n    var remainder = Math.floor(value * BIG_NUM - min * BIG_NUM) %\n        Math.floor(step * BIG_NUM);\n    var closestLowerNum = Math.floor(value * BIG_NUM - Math.abs(remainder));\n    var rounded = remainder === 0 ? value : closestLowerNum / BIG_NUM;\n    // Values with a remainder `< step/2` are rounded to the closest lower value\n    // while values with a remainder `= > step/2` are rounded to the closest bigger value\n    var res = Math.abs(remainder / BIG_NUM) < step / 2\n        ? rounded\n        : rounded + step;\n    var decimalPlaces = exports.getStepDecimals(step);\n    return parseFloat(res.toFixed(decimalPlaces));\n}\nexports.normalizeValue = normalizeValue;\nfunction relativeValue(value, min, max) {\n    return (value - min) / (max - min);\n}\nexports.relativeValue = relativeValue;\nfunction isVertical(direction) {\n    return direction === types_1.Direction.Up || direction === types_1.Direction.Down;\n}\nexports.isVertical = isVertical;\nfunction checkBoundaries(value, min, max) {\n    if (min >= max) {\n        throw new RangeError(\"min (\" + min + \") is equal/bigger than max (\" + max + \")\");\n    }\n    if (value < min) {\n        throw new RangeError(\"value (\" + value + \") is smaller than min (\" + min + \")\");\n    }\n    if (value > max) {\n        throw new RangeError(\"value (\" + value + \") is bigger than max (\" + max + \")\");\n    }\n}\nexports.checkBoundaries = checkBoundaries;\nfunction checkInitialOverlap(values) {\n    if (values.length < 2)\n        return;\n    if (!values.slice(1).every(function (item, i) { return values[i] <= item; })) {\n        throw new RangeError(\"values={[\" + values + \"]} needs to be sorted when allowOverlap={false}\");\n    }\n}\nexports.checkInitialOverlap = checkInitialOverlap;\nfunction getMargin(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['margin-top'], 10),\n        bottom: parseInt(style['margin-bottom'], 10),\n        left: parseInt(style['margin-left'], 10),\n        right: parseInt(style['margin-right'], 10)\n    };\n}\nexports.getMargin = getMargin;\nfunction getPaddingAndBorder(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['padding-top'], 10) + parseInt(style['border-top-width'], 10),\n        bottom: parseInt(style['padding-bottom'], 10) + parseInt(style['border-bottom-width'], 10),\n        left: parseInt(style['padding-left'], 10) + parseInt(style['border-left-width'], 10),\n        right: parseInt(style['padding-right'], 10) + parseInt(style['border-right-width'], 10),\n    };\n}\nexports.getPaddingAndBorder = getPaddingAndBorder;\nfunction translateThumbs(elements, offsets, rtl) {\n    var inverter = rtl ? -1 : 1;\n    elements.forEach(function (element, index) {\n        return translate(element, inverter * offsets[index].x, offsets[index].y);\n    });\n}\nexports.translateThumbs = translateThumbs;\n/**\n * Util function for calculating the index of the thumb that is closes to a given position\n * @param thumbs - array of Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getClosestThumbIndex(thumbs, clientX, clientY, direction) {\n    var thumbIndex = 0;\n    var minThumbDistance = getThumbDistance(thumbs[0], clientX, clientY, direction);\n    for (var i = 1; i < thumbs.length; i++) {\n        var thumbDistance = getThumbDistance(thumbs[i], clientX, clientY, direction);\n        if (thumbDistance < minThumbDistance) {\n            minThumbDistance = thumbDistance;\n            thumbIndex = i;\n        }\n    }\n    return thumbIndex;\n}\nexports.getClosestThumbIndex = getClosestThumbIndex;\nfunction translate(element, x, y) {\n    element.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n}\nexports.translate = translate;\n// adapted from https://github.com/alexreardon/raf-schd\nexports.schd = function (fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function () {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    return wrapperFn;\n};\nfunction replaceAt(values, index, value) {\n    var ret = values.slice(0);\n    ret[index] = value;\n    return ret;\n}\nexports.replaceAt = replaceAt;\nfunction getTrackBackground(_a) {\n    var values = _a.values, colors = _a.colors, min = _a.min, max = _a.max, _b = _a.direction, direction = _b === void 0 ? types_1.Direction.Right : _b, _c = _a.rtl, rtl = _c === void 0 ? false : _c;\n    if (rtl && direction === types_1.Direction.Right) {\n        direction = types_1.Direction.Left;\n    }\n    else if (rtl && types_1.Direction.Left) {\n        direction = types_1.Direction.Right;\n    }\n    // sort values ascending\n    var progress = values.slice(0).sort(function (a, b) { return a - b; }).map(function (value) { return ((value - min) / (max - min)) * 100; });\n    var middle = progress.reduce(function (acc, point, index) {\n        return acc + \", \" + colors[index] + \" \" + point + \"%, \" + colors[index + 1] + \" \" + point + \"%\";\n    }, '');\n    return \"linear-gradient(\" + direction + \", \" + colors[0] + \" 0%\" + middle + \", \" + colors[colors.length - 1] + \" 100%)\";\n}\nexports.getTrackBackground = getTrackBackground;\nfunction voidFn() { }\nexports.voidFn = voidFn;\nfunction assertUnreachable(x) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\n/**\n * Util function for grabbing the true largest width of a thumb\n * including the label\n * @param thumbEl - Thumb element to grab the largest width from\n * @param value - Thumb value, not label value\n * @param separator - Label separator value\n */\nvar getThumbWidth = function (thumbEl, value, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var width = Math.ceil(__spreadArrays([thumbEl], Array.from(thumbEl.children)).reduce(function (width, el) {\n        var elWidth = Math.ceil(el.getBoundingClientRect().width);\n        /**\n         * If a label contains a merged label value, it won't return the true\n         * label width for that Thumb. Clone the label and change the value\n         * to that individual Thumb value in order to grab the true width.\n         */\n        if (el.innerText &&\n            el.innerText.includes(separator) &&\n            el.childElementCount === 0) {\n            var elClone = el.cloneNode(true);\n            elClone.innerHTML = valueToLabel(value.toFixed(decimalPlaces));\n            elClone.style.visibility = 'hidden';\n            document.body.appendChild(elClone);\n            elWidth = Math.ceil(elClone.getBoundingClientRect().width);\n            document.body.removeChild(elClone);\n        }\n        return elWidth > width ? elWidth : width;\n    }, thumbEl.getBoundingClientRect().width));\n    return width;\n};\n/**\n * Bulk of logic for thumb overlaps\n * Consider a scenario with 5 thumbs;\n * Thumb 1 overlaps with thumb 0 and thumb 2\n * Thumb 2 overlaps with thumb 3\n * We need an array that contains [0, 1, 2, 3]\n * The function needs to return the directly overlapping thumbs\n * and all thumbs overlapping linked to those and so on\n * @param index - Thumb index calculating overlaps for\n * @param offsets - Current Array of Thumb offsets for Range\n * @param thumbs - Array of Thumb elements\n * @param values - Array of Thumb values\n * @param separator - String separator for merged label values\n * @returns overlaps - Array of all overlapping thumbs from the index\n */\nvar getOverlaps = function (index, offsets, thumbs, values, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var overlaps = [];\n    /**\n     * Recursive function for building the overlaps Array\n     * If an overlap is found, find the overlaps for that overlap\n     * @param thumbIndex current Thumb index to find overlaps from\n     */\n    var buildOverlaps = function (thumbIndex) {\n        var thumbXWidth = getThumbWidth(thumbs[thumbIndex], values[thumbIndex], separator, decimalPlaces, valueToLabel);\n        var thumbX = offsets[thumbIndex].x;\n        /**\n         * Iterate through the Thumb offsets, if there is a match\n         * add the thumbIndex and siblingIndex to the overlaps Array\n         *\n         * Then build overlaps from the overlapping siblingIndex\n         */\n        offsets.forEach(function (_a, siblingIndex) {\n            var siblingX = _a.x;\n            var siblingWidth = getThumbWidth(thumbs[siblingIndex], values[siblingIndex], separator, decimalPlaces, valueToLabel);\n            if (thumbIndex !== siblingIndex &&\n                ((thumbX >= siblingX && thumbX <= siblingX + siblingWidth) ||\n                    (thumbX + thumbXWidth >= siblingX &&\n                        thumbX + thumbXWidth <= siblingX + siblingWidth))) {\n                if (!overlaps.includes(siblingIndex)) {\n                    overlaps.push(thumbIndex);\n                    overlaps.push(siblingIndex);\n                    overlaps = __spreadArrays(overlaps, [thumbIndex, siblingIndex]);\n                    buildOverlaps(siblingIndex);\n                }\n            }\n        });\n    };\n    buildOverlaps(index);\n    // Sort and remove duplicates from the built overlaps\n    return Array.from(new Set(overlaps.sort()));\n};\n/**\n * A custom React Hook for calculating whether a thumb overlaps\n * another and whether labels could/should merge.\n * @param rangeRef - React ref value of Range component\n * @param values - current Range values Array\n * @param index - thumb index\n * @param step - step value, used to calculate the number of decimal places\n * @param separator - string to separate thumb values\n * @returns label value + styling for thumb label\n */\nexports.useThumbOverlap = function (rangeRef, values, index, step, separator, valueToLabel) {\n    if (step === void 0) { step = 0.1; }\n    if (separator === void 0) { separator = ' - '; }\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var decimalPlaces = exports.getStepDecimals(step);\n    // Create initial label style and value. Label value defaults to thumb value\n    var _a = react_1.useState({}), labelStyle = _a[0], setLabelStyle = _a[1];\n    var _b = react_1.useState(valueToLabel(values[index].toFixed(decimalPlaces))), labelValue = _b[0], setLabelValue = _b[1];\n    // When the rangeRef or values change, update the Thumb label values and styling\n    react_1.useEffect(function () {\n        if (rangeRef) {\n            var thumbs = rangeRef.getThumbs();\n            if (thumbs.length < 1)\n                return;\n            var newStyle = {};\n            var offsets_1 = rangeRef.getOffsets();\n            /**\n             * Get any overlaps for the given Thumb index. This must return all linked\n             * Thumbs. So if there are 4 Thumbs and Thumbs 2, 3 and 4 overlap. If we are\n             * getting the overlaps for Thumb 1 and it overlaps only Thumb 2, we must get\n             * 2, 3 and 4 also.\n             */\n            var overlaps = getOverlaps(index, offsets_1, thumbs, values, separator, decimalPlaces, valueToLabel);\n            // Set a default label value of the Thumb value\n            var labelValue_1 = valueToLabel(values[index].toFixed(decimalPlaces));\n            /**\n             * If there are overlaps for the Thumb, we need to calculate the correct\n             * Label value along with the relevant styling. We only want to show a Label\n             * for the left most Thumb in an overlapping set.\n             * All other Thumbs will be set to display: none.\n             */\n            if (overlaps.length) {\n                /**\n                 * Get an Array of the offsets for the overlapping Thumbs\n                 * This is so we can determine if the Thumb we are looking at\n                 * is the left most thumb in an overlapping set\n                 */\n                var offsetsX = overlaps.reduce(function (a, c, i, s) {\n                    return a.length ? __spreadArrays(a, [offsets_1[s[i]].x]) : [offsets_1[s[i]].x];\n                }, []);\n                /**\n                 * If our Thumb is the left most Thumb, we can build a Label value\n                 * and set the style for that Label\n                 */\n                if (Math.min.apply(Math, offsetsX) === offsets_1[index].x) {\n                    /**\n                     * First calculate the Label value. To do this,\n                     * grab all the values for the Thumbs in our overlaps.\n                     * Then convert that to a Set and sort it whilst removing duplicates.\n                     */\n                    var labelValues_1 = [];\n                    overlaps.forEach(function (thumb) {\n                        labelValues_1.push(values[thumb].toFixed(decimalPlaces));\n                    });\n                    /**\n                     *  Update the labelValue with the resulting Array\n                     *  joined by our defined separator\n                     */\n                    labelValue_1 = Array.from(new Set(labelValues_1.sort(function (a, b) { return parseFloat(a) - parseFloat(b); })))\n                        .map(valueToLabel)\n                        .join(separator);\n                    /**\n                     * Lastly, build the label styling. The label styling will\n                     * position the label and apply a transform so that it's centered.\n                     * We want the center point between the left edge of the left most Thumb\n                     * and the right edge of the right most Thumb.\n                     */\n                    var first = Math.min.apply(Math, offsetsX);\n                    var last = Math.max.apply(Math, offsetsX);\n                    var lastWidth = thumbs[overlaps[offsetsX.indexOf(last)]].getBoundingClientRect().width;\n                    newStyle.left = Math.abs(first - (last + lastWidth)) / 2 + \"px\";\n                    newStyle.transform = 'translate(-50%, 0)';\n                }\n                else {\n                    // If the Thumb isn't the left most Thumb, hide the Label!\n                    newStyle.visibility = 'hidden';\n                }\n            }\n            // Update the label value and style\n            setLabelValue(labelValue_1);\n            setLabelStyle(newStyle);\n        }\n    }, [rangeRef, values]);\n    return [labelValue, labelStyle];\n};\n/**\n * Util function for calculating the distance of the center of a thumb\n * form a given mouse/touch target's position\n * @param thumbEl - Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getThumbDistance(thumbEl, clientX, clientY, direction) {\n    var _a = thumbEl.getBoundingClientRect(), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n    return isVertical(direction) ? Math.abs(clientY - (y + height / 2)) : Math.abs(clientX - (x + width / 2));\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar utils_1 = require(\"./utils\");\nvar types_1 = require(\"./types\");\nvar INCREASE_KEYS = ['ArrowRight', 'ArrowUp', 'k', 'PageUp'];\nvar DECREASE_KEYS = ['ArrowLeft', 'ArrowDown', 'j', 'PageDown'];\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range(props) {\n        var _this = _super.call(this, props) || this;\n        _this.trackRef = React.createRef();\n        _this.thumbRefs = [];\n        _this.markRefs = [];\n        _this.state = {\n            draggedTrackPos: [-1, -1],\n            draggedThumbIndex: -1,\n            thumbZIndexes: new Array(_this.props.values.length).fill(0).map(function (t, i) { return i; }),\n            isChanged: false,\n            markOffsets: []\n        };\n        _this.getOffsets = function () {\n            var _a = _this.props, direction = _a.direction, values = _a.values, min = _a.min, max = _a.max;\n            var trackElement = _this.trackRef.current;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackPadding = utils_1.getPaddingAndBorder(trackElement);\n            return _this.getThumbs().map(function (thumb, index) {\n                var thumbOffsets = { x: 0, y: 0 };\n                var thumbRect = thumb.getBoundingClientRect();\n                var thumbMargins = utils_1.getMargin(thumb);\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        thumbOffsets.x = (thumbMargins.left + trackPadding.left) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Left:\n                        thumbOffsets.x = (thumbMargins.right + trackPadding.right) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width -\n                                trackRect.width * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Up:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height -\n                                trackRect.height * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Down:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    default:\n                        return utils_1.assertUnreachable(direction);\n                }\n            });\n        };\n        _this.getThumbs = function () {\n            if (_this.trackRef && _this.trackRef.current) {\n                return Array.from(_this.trackRef.current.children).filter(function (el) {\n                    return el.hasAttribute('aria-valuenow');\n                });\n            }\n            console.warn('No thumbs found in the track container. Did you forget to pass & spread the `props` param in renderTrack?');\n            return [];\n        };\n        _this.getTargetIndex = function (e) {\n            return _this.getThumbs().findIndex(function (child) { return child === e.target || child.contains(e.target); });\n        };\n        _this.addTouchEvents = function (e) {\n            document.addEventListener('touchmove', _this.schdOnTouchMove, {\n                passive: false\n            });\n            document.addEventListener('touchend', _this.schdOnEnd, {\n                passive: false\n            });\n            document.addEventListener('touchcancel', _this.schdOnEnd, {\n                passive: false\n            });\n        };\n        _this.addMouseEvents = function (e) {\n            document.addEventListener('mousemove', _this.schdOnMouseMove);\n            document.addEventListener('mouseup', _this.schdOnEnd);\n        };\n        _this.onMouseDownTrack = function (e) {\n            var _a;\n            if (e.button !== 0)\n                return;\n            e.persist();\n            e.preventDefault();\n            _this.addMouseEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.clientX, e.clientY]\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = utils_1.getClosestThumbIndex(_this.thumbRefs.map(function (t) { return t.current; }), e.clientX, e.clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n        };\n        _this.onResize = function () {\n            utils_1.translateThumbs(_this.getThumbs(), _this.getOffsets(), _this.props.rtl);\n            _this.calculateMarkOffsets();\n        };\n        _this.onTouchStartTrack = function (e) {\n            var _a;\n            e.persist();\n            _this.addTouchEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.touches[0].clientX, e.touches[0].clientY]\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = utils_1.getClosestThumbIndex(_this.thumbRefs.map(function (t) { return t.current; }), e.touches[0].clientX, e.touches[0].clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n        };\n        _this.onMouseOrTouchStart = function (e) {\n            if (_this.props.disabled)\n                return;\n            var isTouch = utils_1.isTouchEvent(e);\n            if (!isTouch && e.button !== 0)\n                return;\n            var index = _this.getTargetIndex(e);\n            if (index === -1)\n                return;\n            if (isTouch) {\n                _this.addTouchEvents(e);\n            }\n            else {\n                _this.addMouseEvents(e);\n            }\n            _this.setState({\n                draggedThumbIndex: index,\n                thumbZIndexes: _this.state.thumbZIndexes.map(function (t, i) {\n                    if (i === index) {\n                        return Math.max.apply(Math, _this.state.thumbZIndexes);\n                    }\n                    return t <= _this.state.thumbZIndexes[index] ? t : t - 1;\n                })\n            });\n        };\n        _this.onMouseMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.clientX, e.clientY);\n        };\n        _this.onTouchMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n        };\n        _this.onKeyDown = function (e) {\n            var _a = _this.props, values = _a.values, onChange = _a.onChange, step = _a.step, rtl = _a.rtl;\n            var isChanged = _this.state.isChanged;\n            var index = _this.getTargetIndex(e.nativeEvent);\n            var inverter = rtl ? -1 : 1;\n            if (index === -1)\n                return;\n            if (INCREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange(utils_1.replaceAt(values, index, _this.normalizeValue(values[index] + inverter * (e.key === 'PageUp' ? step * 10 : step), index)));\n            }\n            else if (DECREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange(utils_1.replaceAt(values, index, _this.normalizeValue(values[index] -\n                    inverter * (e.key === 'PageDown' ? step * 10 : step), index)));\n            }\n            else if (e.key === 'Tab') {\n                _this.setState({ draggedThumbIndex: -1 }, function () {\n                    // If key pressed when thumb was moving, fire onFinalChange\n                    if (isChanged) {\n                        _this.fireOnFinalChange();\n                    }\n                });\n            }\n            else {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            }\n        };\n        _this.onKeyUp = function (e) {\n            var isChanged = _this.state.isChanged;\n            _this.setState({\n                draggedThumbIndex: -1\n            }, function () {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            });\n        };\n        _this.onMove = function (clientX, clientY) {\n            var _a = _this.state, draggedThumbIndex = _a.draggedThumbIndex, draggedTrackPos = _a.draggedTrackPos;\n            var _b = _this.props, direction = _b.direction, min = _b.min, max = _b.max, onChange = _b.onChange, values = _b.values, step = _b.step, rtl = _b.rtl;\n            if (draggedThumbIndex === -1 && draggedTrackPos[0] === -1 && draggedTrackPos[1] === -1)\n                return null;\n            var trackElement = _this.trackRef.current;\n            // If component was closed down prematurely, A last onMove could be triggered based on requestAnimationFrame()\n            if (!trackElement)\n                return null;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackLength = utils_1.isVertical(direction)\n                ? trackRect.height\n                : trackRect.width;\n            if (draggedTrackPos[0] !== -1 && draggedTrackPos[1] !== -1) {\n                // calculate how much it moved since the last update\n                var dX = clientX - draggedTrackPos[0];\n                var dY = clientY - draggedTrackPos[1];\n                // calculate the delta of the value\n                var deltaValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                    case types_1.Direction.Left:\n                        deltaValue = (dX / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Down:\n                    case types_1.Direction.Up:\n                        deltaValue = (dY / trackLength) * (max - min) + min;\n                        break;\n                    default:\n                        utils_1.assertUnreachable(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    deltaValue *= -1;\n                }\n                if (Math.abs(deltaValue) >= step / 2) {\n                    // adjust delta so it fits into the range\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        if ((values[i] === max && Math.sign(deltaValue) === 1) || (values[i] === min && Math.sign(deltaValue) === -1))\n                            return;\n                        var thumbValue = values[i] + deltaValue;\n                        if (thumbValue > max)\n                            deltaValue = max - values[i];\n                        else if (thumbValue < min)\n                            deltaValue = min - values[i];\n                    }\n                    // add the delta to each thumb\n                    var newValues = values.slice(0);\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        newValues = utils_1.replaceAt(newValues, i, _this.normalizeValue(values[i] + deltaValue, i));\n                    }\n                    _this.setState({\n                        draggedTrackPos: [clientX, clientY],\n                    });\n                    onChange(newValues);\n                }\n            }\n            else {\n                var newValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        newValue =\n                            ((clientX - trackRect.left) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Left:\n                        newValue =\n                            ((trackLength - (clientX - trackRect.left)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    case types_1.Direction.Down:\n                        newValue =\n                            ((clientY - trackRect.top) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Up:\n                        newValue =\n                            ((trackLength - (clientY - trackRect.top)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    default:\n                        utils_1.assertUnreachable(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    newValue = max + min - newValue;\n                }\n                if (Math.abs(values[draggedThumbIndex] - newValue) >= step / 2) {\n                    onChange(utils_1.replaceAt(values, draggedThumbIndex, _this.normalizeValue(newValue, draggedThumbIndex)));\n                }\n            }\n        };\n        _this.normalizeValue = function (value, index) {\n            var _a = _this.props, min = _a.min, max = _a.max, step = _a.step, allowOverlap = _a.allowOverlap, values = _a.values;\n            return utils_1.normalizeValue(value, index, min, max, step, allowOverlap, values);\n        };\n        _this.onEnd = function (e) {\n            e.preventDefault();\n            document.removeEventListener('mousemove', _this.schdOnMouseMove);\n            document.removeEventListener('touchmove', _this.schdOnTouchMove);\n            document.removeEventListener('mouseup', _this.schdOnEnd);\n            document.removeEventListener('touchend', _this.schdOnEnd);\n            document.removeEventListener('touchcancel', _this.schdOnEnd);\n            if (_this.state.draggedThumbIndex === -1 && _this.state.draggedTrackPos[0] === -1 && _this.state.draggedTrackPos[1] === -1)\n                return null;\n            _this.setState({ draggedThumbIndex: -1, draggedTrackPos: [-1, -1] }, function () {\n                _this.fireOnFinalChange();\n            });\n        };\n        _this.fireOnFinalChange = function () {\n            _this.setState({ isChanged: false });\n            var _a = _this.props, onFinalChange = _a.onFinalChange, values = _a.values;\n            if (onFinalChange) {\n                onFinalChange(values);\n            }\n        };\n        _this.calculateMarkOffsets = function () {\n            if (!_this.props.renderMark ||\n                !_this.trackRef ||\n                _this.trackRef.current === null)\n                return;\n            var elStyles = window.getComputedStyle(_this.trackRef.current);\n            var trackWidth = parseInt(elStyles.width, 10);\n            var trackHeight = parseInt(elStyles.height, 10);\n            var paddingLeft = parseInt(elStyles.paddingLeft, 10);\n            var paddingTop = parseInt(elStyles.paddingTop, 10);\n            var res = [];\n            for (var i = 0; i < _this.numOfMarks + 1; i++) {\n                var markHeight = 9999;\n                var markWidth = 9999;\n                if (_this.markRefs[i].current) {\n                    var markRect = _this.markRefs[i].current.getBoundingClientRect();\n                    markHeight = markRect.height;\n                    markWidth = markRect.width;\n                }\n                if (_this.props.direction === types_1.Direction.Left ||\n                    _this.props.direction === types_1.Direction.Right) {\n                    res.push([\n                        Math.round((trackWidth / _this.numOfMarks) * i + paddingLeft - markWidth / 2),\n                        -Math.round((markHeight - trackHeight) / 2)\n                    ]);\n                }\n                else {\n                    res.push([\n                        Math.round((trackHeight / _this.numOfMarks) * i + paddingTop - markHeight / 2),\n                        -Math.round((markWidth - trackWidth) / 2)\n                    ]);\n                }\n            }\n            _this.setState({ markOffsets: res });\n        };\n        _this.numOfMarks = (props.max - props.min) / _this.props.step;\n        _this.schdOnMouseMove = utils_1.schd(_this.onMouseMove);\n        _this.schdOnTouchMove = utils_1.schd(_this.onTouchMove);\n        _this.schdOnEnd = utils_1.schd(_this.onEnd);\n        _this.thumbRefs = props.values.map(function () { return React.createRef(); });\n        for (var i = 0; i < _this.numOfMarks + 1; i++) {\n            _this.markRefs[i] = React.createRef();\n        }\n        if (!utils_1.isStepDivisible(props.min, props.max, props.step)) {\n            console.warn('The difference of `max` and `min` must be divisible by `step`');\n        }\n        if (props.step === 0) {\n            throw new Error('\"step\" property should be a positive number');\n        }\n        return _this;\n    }\n    Range.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, values = _a.values, min = _a.min, step = _a.step;\n        this.resizeObserver = window.ResizeObserver\n            ? new window.ResizeObserver(this.onResize)\n            : {\n                observe: function () { return window.addEventListener('resize', _this.onResize); },\n                unobserve: function () {\n                    return window.removeEventListener('resize', _this.onResize);\n                }\n            };\n        document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        document.addEventListener('mousedown', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        !this.props.allowOverlap && utils_1.checkInitialOverlap(this.props.values);\n        this.props.values.forEach(function (value) {\n            return utils_1.checkBoundaries(value, _this.props.min, _this.props.max);\n        });\n        this.resizeObserver.observe(this.trackRef.current);\n        utils_1.translateThumbs(this.getThumbs(), this.getOffsets(), this.props.rtl);\n        this.calculateMarkOffsets();\n        values.forEach(function (value) {\n            if (!utils_1.isStepDivisible(min, value, step)) {\n                console.warn('The `values` property is in conflict with the current `step`, `min`, and `max` properties. Please provide values that are accessible using the min, max, and step values.');\n            }\n        });\n    };\n    Range.prototype.componentDidUpdate = function (prevProps) {\n        utils_1.translateThumbs(this.getThumbs(), this.getOffsets(), this.props.rtl);\n    };\n    Range.prototype.componentWillUnmount = function () {\n        var options = {\n            passive: false\n        };\n        document.removeEventListener('mousedown', this.onMouseOrTouchStart, options);\n        // These need to be removed!!\n        document.removeEventListener('mousemove', this.schdOnMouseMove);\n        document.removeEventListener('touchmove', this.schdOnTouchMove);\n        document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n        document.removeEventListener('mouseup', this.schdOnEnd);\n        document.removeEventListener('touchend', this.schdOnEnd);\n        this.resizeObserver.unobserve(this.trackRef.current);\n    };\n    Range.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, renderTrack = _a.renderTrack, renderThumb = _a.renderThumb, _b = _a.renderMark, renderMark = _b === void 0 ? function () { return null; } : _b, values = _a.values, min = _a.min, max = _a.max, allowOverlap = _a.allowOverlap, disabled = _a.disabled;\n        var _c = this.state, draggedThumbIndex = _c.draggedThumbIndex, thumbZIndexes = _c.thumbZIndexes, markOffsets = _c.markOffsets;\n        return renderTrack({\n            props: {\n                style: {\n                    // creates stacking context that prevents z-index applied to thumbs\n                    // interfere with other elements\n                    transform: 'scale(1)',\n                    cursor: draggedThumbIndex > -1\n                        ? 'grabbing'\n                        : this.props.draggableTrack\n                            ? utils_1.isVertical(this.props.direction)\n                                ? 'ns-resize'\n                                : 'ew-resize'\n                            : values.length === 1 && !disabled\n                                ? 'pointer'\n                                : 'inherit'\n                },\n                onMouseDown: disabled ? utils_1.voidFn : this.onMouseDownTrack,\n                onTouchStart: disabled ? utils_1.voidFn : this.onTouchStartTrack,\n                ref: this.trackRef\n            },\n            isDragged: this.state.draggedThumbIndex > -1,\n            disabled: disabled,\n            children: __spreadArrays(markOffsets.map(function (offset, index) {\n                return renderMark({\n                    props: {\n                        style: _this.props.direction === types_1.Direction.Left ||\n                            _this.props.direction === types_1.Direction.Right\n                            ? {\n                                position: 'absolute',\n                                left: offset[0] + \"px\",\n                                marginTop: offset[1] + \"px\"\n                            }\n                            : {\n                                position: 'absolute',\n                                top: offset[0] + \"px\",\n                                marginLeft: offset[1] + \"px\"\n                            },\n                        key: \"mark\" + index,\n                        ref: _this.markRefs[index]\n                    },\n                    index: index\n                });\n            }), values.map(function (value, index) {\n                var isDragged = _this.state.draggedThumbIndex === index;\n                return renderThumb({\n                    index: index,\n                    value: value,\n                    isDragged: isDragged,\n                    props: {\n                        style: {\n                            position: 'absolute',\n                            zIndex: thumbZIndexes[index],\n                            cursor: disabled ? 'inherit' : isDragged ? 'grabbing' : 'grab',\n                            userSelect: 'none',\n                            touchAction: 'none',\n                            WebkitUserSelect: 'none',\n                            MozUserSelect: 'none',\n                            msUserSelect: 'none'\n                        },\n                        key: index,\n                        tabIndex: disabled ? undefined : 0,\n                        'aria-valuemax': allowOverlap ? max : values[index + 1] || max,\n                        'aria-valuemin': allowOverlap ? min : values[index - 1] || min,\n                        'aria-valuenow': value,\n                        draggable: false,\n                        ref: _this.thumbRefs[index],\n                        role: 'slider',\n                        onKeyDown: disabled ? utils_1.voidFn : _this.onKeyDown,\n                        onKeyUp: disabled ? utils_1.voidFn : _this.onKeyUp\n                    }\n                });\n            }))\n        });\n    };\n    Range.defaultProps = {\n        step: 1,\n        direction: types_1.Direction.Right,\n        rtl: false,\n        disabled: false,\n        allowOverlap: false,\n        draggableTrack: false,\n        min: 0,\n        max: 100\n    };\n    return Range;\n}(React.Component));\nexports.default = Range;\n"],"sourceRoot":""}