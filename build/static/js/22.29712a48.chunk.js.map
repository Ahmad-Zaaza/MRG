{"version":3,"sources":["components/LayoutMobile.js","components/ViewedItems/NoViewedItems.js","components/ViewedItems/ViewedItemMobile.js","pages/ViewedItemsMobile.js"],"names":["LayoutMobile","children","React","useState","sideMenuOpen","setSideMenuOpen","sideMenuRef","useRef","toggleSideMenu","useClickAway","current","classList","add","div","initial","opacity","animate","exit","key","className","NoViewedItems","layout","ViewedItemMobile","item","handleRemoveItem","useIntl","locale","formatMessage","variants","hidden","visible","exited","x","transition","duration","ease","to","id","LazyImage","src","process","image","link","alt","translation","title","pb","onClick","style","width","ViewedItemsMobile","useQuery","getVisitedItems","retry","refetchOnWindowFocus","data","isLoading","localVisited","localStorage","getItem","parsed","JSON","parse","filter","i","toString","console","log","setItem","stringify","queryCache","setQueryData","prev","Helmet","type","color","height","length","map"],"mappings":"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","file":"static/js/22.29712a48.chunk.js","sourcesContent":["import { AnimatePresence, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport useClickAway from '../hooks/useClickAway';\r\nimport MobileFooter from './MobileFooter';\r\nimport MobileNavbar from './MobileNavbar';\r\nimport SideMenu from './NavbarComponents/SideMenu';\r\n\r\nexport default function LayoutMobile({ children }) {\r\n  const [sideMenuOpen, setSideMenuOpen] = React.useState(false);\r\n  const sideMenuRef = React.useRef(null);\r\n  const toggleSideMenu = () => {\r\n    if (sideMenuOpen) {\r\n      setSideMenuOpen(false);\r\n    } else {\r\n      setSideMenuOpen(true);\r\n    }\r\n  };\r\n  useClickAway(sideMenuRef, () => {\r\n    if (sideMenuOpen) {\r\n      sideMenuRef.current.classList.add('-translate-x-full');\r\n      setSideMenuOpen(false);\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <MobileNavbar\r\n        sideMenuOpen={sideMenuOpen}\r\n        setSideMenuOpen={setSideMenuOpen}\r\n        toggleSideMenu={toggleSideMenu}\r\n      />\r\n      {children}\r\n      <AnimatePresence>\r\n        {sideMenuOpen && (\r\n          <SideMenu toggleSideMenu={toggleSideMenu} sideMenuRef={sideMenuRef} />\r\n        )}\r\n        {sideMenuOpen && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 0.25 }}\r\n            exit={{ opacity: 0 }}\r\n            key={5687452}\r\n            className=\"bg-gray-900 opacity-25 fixed z-10 top-0 left-0 w-full h-screen\"\r\n          ></motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      <MobileFooter />\r\n    </>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\n\r\nexport default function NoViewedItems() {\r\n  return (\r\n    <motion.div layout>\r\n      There is Currently no Viewed Items, Start Browsing now !\r\n    </motion.div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport LazyImage from '../../helpers/LazyImage';\r\n\r\nexport default function ViewedItemMobile({ item, handleRemoveItem }) {\r\n  const { locale, formatMessage } = useIntl();\r\n  const variants = {\r\n    hidden: {\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n    },\r\n    exited: {\r\n      x: 300,\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <motion.div\r\n      layout\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exited\"\r\n      className=\"viewed-item__mobiles\"\r\n    >\r\n      <Link to={`/${locale}/c/${item.id}`}>\r\n        <LazyImage\r\n          src={`${process.env.REACT_APP_IMAGES_URL}/original/${item.image.link}`}\r\n          alt={item.translation[locale].title}\r\n          pb=\"calc(100% * 286/210)\"\r\n        />\r\n      </Link>\r\n      <div className=\"pt-2\">\r\n        <Link to={`/${locale}/c/${item.id}`}>\r\n          <h1 className=\" text-sm font-semibold text-clamp-2 \">\r\n            {item.translation[locale].title}\r\n          </h1>\r\n        </Link>\r\n        {/* <Rating\r\n          initialRating={item.rating}\r\n          readonly\r\n          emptySymbol={<AiOutlineStar className=\"text-main-color\" />}\r\n          fullSymbol={<AiFillStar className=\"text-main-color\" />}\r\n          className=\" pt-1\"\r\n        /> */}\r\n        <button\r\n          onClick={() => handleRemoveItem(item.id)}\r\n          className={`\r\n            \r\n          \r\n              bg-main-color text-main-text\r\n           px-2 py-1 rounded-sm flex items-center uppercase justify-center`}\r\n          style={{ width: '76px' }}\r\n        >\r\n          {formatMessage({ id: 'remove' })}\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useIntl } from 'react-intl';\r\nimport { queryCache, useQuery } from 'react-query';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport LayoutMobile from '../components/LayoutMobile';\r\nimport NoViewedItems from '../components/ViewedItems/NoViewedItems';\r\nimport ViewedItemMobile from '../components/ViewedItems/ViewedItemMobile';\r\nimport { getVisitedItems } from '../Queries/Queries';\r\n\r\nexport default function ViewedItemsMobile() {\r\n  const { formatMessage } = useIntl();\r\n\r\n  /**\r\n   * Main Fetch\r\n   */\r\n  const { data, isLoading } = useQuery('viewedItems', getVisitedItems, {\r\n    retry: true,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const handleRemoveItem = id => {\r\n    let localVisited = localStorage.getItem('visitedItems');\r\n    let parsed = JSON.parse(localVisited);\r\n    localVisited = parsed.filter(i => {\r\n      return i.id !== id.toString();\r\n    });\r\n    console.log(\r\n      parsed.filter(i => {\r\n        console.log(i.id, 'i', id, 'id');\r\n        return i.id !== id;\r\n      })\r\n    );\r\n    localStorage.setItem('visitedItems', JSON.stringify(localVisited));\r\n\r\n    queryCache.setQueryData('viewedItems', prev => {\r\n      return prev.filter(i => i.id !== id.toString());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LayoutMobile>\r\n      <Helmet>\r\n        <title>Viewed Items | MRG</title>\r\n      </Helmet>\r\n\r\n      {isLoading && (\r\n        <div className=\"min-h-screen flex items-center justify-center\">\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#b72b2b\"\r\n            height={40}\r\n            width={40}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      )}\r\n      {!isLoading && (\r\n        <div className=\" p-2 min-h-screen\">\r\n          <h1 className=\" text-xl font-semibold\">\r\n            {formatMessage({ id: 'your-viewed-items' })}\r\n          </h1>\r\n          <hr className=\"my-2\" />\r\n          <AnimateSharedLayout>\r\n            <motion.div layout className=\"viewed-items-grid__mobile\">\r\n              <AnimatePresence>\r\n                {data.length !== 0 &&\r\n                  data.map(item => {\r\n                    return (\r\n                      <ViewedItemMobile\r\n                        key={item.id}\r\n                        item={item}\r\n                        handleRemoveItem={handleRemoveItem}\r\n                      />\r\n                    );\r\n                  })}\r\n                {data.length === 0 && <NoViewedItems key=\"No Viewed Items\" />}\r\n              </AnimatePresence>\r\n            </motion.div>\r\n          </AnimateSharedLayout>\r\n        </div>\r\n      )}\r\n    </LayoutMobile>\r\n  );\r\n}\r\n"],"sourceRoot":""}