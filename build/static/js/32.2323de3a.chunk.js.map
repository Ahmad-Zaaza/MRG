{"version":3,"sources":["pages/TrackOrder.js"],"names":["options","value","label","PhoneNumberCustomInput","name","countryCode","setCountryCode","props","useField","field","meta","className","htmlFor","style","display","gridTemplateColumns","gap","isSearchable","onChange","styles","dropdownIndicator","provided","padding","valueContainer","onBlur","e","error","touched","height","TrackOrder","userLogin","React","useContext","AuthProvider","settings","DataProvider","useState","isTabletOrAbove","useMediaQuery","query","formatMessage","useIntl","errorOpen","setErrorOpen","errorMessage","setErrorMessage","history","useHistory","validationSchema","Yup","email","id","phoneNumber","matches","required","password","message","closeFunction","to","src","store_logo_color","alt","width","initialValues","onSubmit","values","actions","a","setSubmitting","handleSubmit","isSubmitting","disabled","type","color","visible","onClick","goBack"],"mappings":"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","file":"static/js/32.2323de3a.chunk.js","sourcesContent":["import { Formik, useField } from 'formik';\r\nimport React from 'react';\r\n\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport ErrorSnackbar from '../components/ErrorSnackbar';\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport Language from '../components/NavbarComponents/Language';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { DataProvider } from '../contexts/DataContext';\r\nconst options = [\r\n  { value: '+965', label: '+965' },\r\n  { value: '+966', label: '+966' },\r\n];\r\nconst PhoneNumberCustomInput = ({\r\n  label,\r\n  value,\r\n  name,\r\n  countryCode,\r\n  setCountryCode,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <div className=\"w-full mb-2 flex flex-col \">\r\n      <label\r\n        htmlFor={name}\r\n        className={`text-sm font-semibold text-gray-800 mb-1`}\r\n      >\r\n        {label}\r\n      </label>\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: '0.5fr 1fr',\r\n          gap: '0.5rem',\r\n        }}\r\n      >\r\n        <Select\r\n          options={options}\r\n          isSearchable={false}\r\n          value={countryCode}\r\n          onChange={setCountryCode}\r\n          styles={{\r\n            dropdownIndicator: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.25rem',\r\n              };\r\n            },\r\n            valueContainer: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.5rem',\r\n              };\r\n            },\r\n          }}\r\n        />\r\n\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          onBlur={e => {\r\n            field.onBlur(e);\r\n          }}\r\n          className={` border rounded w-full p-2 ${\r\n            meta.error && 'border-main-color'\r\n          }`}\r\n        />\r\n      </div>\r\n      {meta.touched && meta.error ? (\r\n        <h1 className=\"text-xs text-main-color mt-1\">{meta.error}</h1>\r\n      ) : (\r\n        <h1 className=\"text-xs text-main-color mt-1\" style={{ height: '18px' }}>\r\n          {' '}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TrackOrder() {\r\n  const { userLogin } = React.useContext(AuthProvider);\r\n  const { settings } = React.useContext(DataProvider);\r\n  const [countryCode, setCountryCode] = React.useState(options[0]);\r\n  const isTabletOrAbove = useMediaQuery({ query: '(min-width: 768px)' });\r\n  const { formatMessage } = useIntl();\r\n  const [errorOpen, setErrorOpen] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const history = useHistory();\r\n  const closeError = () => {\r\n    setErrorOpen(false);\r\n  };\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(formatMessage({ id: 'email-validation' })),\r\n    phoneNumber: Yup.string()\r\n      .matches(/^\\d+$/, formatMessage({ id: 'number-only' }))\r\n      .required(formatMessage({ id: 'phone-empty' })),\r\n    password: Yup.string().required(formatMessage({ id: 'password-empty' })),\r\n  });\r\n  return (\r\n    <div className=\" text-gray-900 px-2 flex justify-center items-center   h-screen relative\">\r\n      {errorOpen && (\r\n        <ErrorSnackbar message={errorMessage} closeFunction={closeError} />\r\n      )}\r\n      <div className=\" z-2  max-w-screen-sm overflow-hidden\">\r\n        <div className=\"flex items-center flex-col mb-4  rounded-lg text-center \">\r\n          <Link to=\"/\">\r\n            <img\r\n              src={settings?.store_logo_color}\r\n              alt=\"logo\"\r\n              className=\" mb-3\"\r\n              style={{ width: '100px', height: '50px' }}\r\n            />\r\n          </Link>\r\n          <h2 className=\"text-xl mb-2 text-center font-semibold\">\r\n            {formatMessage({ id: 'track-my-order' })}\r\n          </h2>\r\n          <h1>{formatMessage({ id: 'track-order-enter-your-phone' })}</h1>\r\n        </div>\r\n        <div className=\"rounded-lg border bg-gray-100 mb-2\">\r\n          <Formik\r\n            initialValues={{\r\n              phoneNumber: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions) => {\r\n              setErrorOpen(false);\r\n              try {\r\n                const res = await userLogin({\r\n                  phoneNumber: `${countryCode.value}${values.phoneNumber}`,\r\n                });\r\n                if (res === 'ok') {\r\n                } else {\r\n                  actions.setSubmitting(false);\r\n                }\r\n              } catch (error) {\r\n                setErrorOpen(true);\r\n                setErrorMessage('Something went wrong, Please try again');\r\n              }\r\n            }}\r\n          >\r\n            {({ handleSubmit, values, isSubmitting }) => {\r\n              return (\r\n                <form className=\"px-3 py-2\" onSubmit={handleSubmit}>\r\n                  <PhoneNumberCustomInput\r\n                    label={formatMessage({ id: 'phone-label' })}\r\n                    name=\"phoneNumber\"\r\n                    value={values.phoneNumber}\r\n                    countryCode={countryCode}\r\n                    setCountryCode={setCountryCode}\r\n                  />\r\n\r\n                  <div className=\" py-1 mt-2\">\r\n                    <button\r\n                      disabled={isSubmitting}\r\n                      type=\"submit\"\r\n                      className={`${\r\n                        isSubmitting\r\n                          ? 'bg-main-color cursor-not-allowed'\r\n                          : 'bg-main-color text-second-nav-text-light hover:bg-red-800'\r\n                      } w-full rounded uppercase  p-2 font-semibold  transition duration-150 `}\r\n                    >\r\n                      <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#fff\"\r\n                        height={20}\r\n                        width={20}\r\n                        visible={isSubmitting}\r\n                      />\r\n                      {!isSubmitting && formatMessage({ id: 'submit' })}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isTabletOrAbove\r\n            ? 'credentials-language__container'\r\n            : 'credentials-language__container-mobile'\r\n        }`}\r\n      >\r\n        <Language />\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isTabletOrAbove\r\n            ? 'credentials-back-button__container'\r\n            : 'credentials-back-button__container-mobile'\r\n        }`}\r\n      >\r\n        <button onClick={() => history.goBack()}>\r\n          <AiOutlineArrowLeft className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}