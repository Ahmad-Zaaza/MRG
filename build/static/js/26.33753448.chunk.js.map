{"version":3,"sources":["components/Category/LeftSideBrands.js","components/Category/LeftSidePrice.js","components/Category/CategoryLeftSide.js","components/Category/SortInfoPanel.js","components/Category/CategoryRightSide.js","components/Category/CategoryChildren.js","components/Category/CategoryHeader.js","pages/Category.js"],"names":["LeftSideBrands","products","handleBrandChange","brandFilters","brands","React","useMemo","console","log","forEach","product","brand_id","push","Set","length","className","map","brand","key","type","onChange","checked","htmlFor","LeftSidePrice","handlePriceChange","priceFilters","handleChangePriceInput","handleSubmitPrice","useIntl","locale","formatMessage","deliveryCountry","useContext","DataProvider","id","currency","translation","symbol","step","min","rtl","max","values","renderTrack","props","children","style","height","width","backgroundColor","renderThumb","borderRadius","display","gridTemplateColumns","value","onClick","CategoryLeftSide","productsLoading","categoryInfo","categoryInfoLoading","name","subCategory","i","to","slug","sortByOptions","label","SortInfoPanel","sortBy","handleRemoveFilters","filters","handleSortByChange","marginBottom","div","layout","h1","item","button","isSearchable","options","placeholder","CategoryRightSide","filteredProducts","filteredProductsLoading","filtersApplied","speed","viewBox","foregroundColor","x","y","rx","ry","CategoryItemLoader","CategoryProductItem","VariantCategoryProductItem","CategoryChildren","navigation","breakpoints","320","slidesPerView","spaceBetween","480","640","860","1100","1440","child","LazyImage","src","process","image","link","alt","pb","CategoryHeader","cover_desktop","Category","category","useParams","useState","setBrandFilters","setSortBy","page","setPage","resultsPerPage","setResultsPerPage","setFiltersApplied","setPriceFilters","setFilters","useQuery","getCategoryProducts","retry","refetchOnWindowFocus","data","isLoading","getSingleCategoryInfo","filterProducts","enabled","useEffect","Layout","Helmet","minHeight","prev","filter","newArr","e","target","selectedValue","SwiperCore","use","Navigation"],"mappings":"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","file":"static/js/26.33753448.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function LeftSideBrands({\r\n  products,\r\n  handleBrandChange,\r\n  brandFilters,\r\n}) {\r\n  const brands = React.useMemo(() => {\r\n    console.log('triggered');\r\n    let brands = [];\r\n    products.forEach(product => {\r\n      if (product.brand_id) {\r\n        brands.push(product.brand_id);\r\n      }\r\n    });\r\n    brands = [...new Set([...brands])];\r\n    return brands;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  if (brands.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <h1 className=\"text-xl font-semibold\">Brand</h1>\r\n      <hr className=\"my-2\" />\r\n      <div className=\"flex flex-col justify-center\">\r\n        {brands.map(brand => {\r\n          return (\r\n            <div key={brand} className=\"flex items-center mb-2 text-sm \">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-checkbox border-gray-600 text-red-700 mr-5\"\r\n                onChange={() => handleBrandChange(brand)}\r\n                checked={brandFilters === brand}\r\n              />\r\n              <label\r\n                className=\"hover:underline hover:text-blue-700 cursor-pointer\"\r\n                htmlFor={brand}\r\n              >\r\n                {brand}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Range } from 'react-range';\r\nimport { DataProvider } from '../../contexts/DataContext';\r\nexport default function LeftSidePrice({\r\n  handlePriceChange,\r\n  priceFilters,\r\n  handleChangePriceInput,\r\n  handleSubmitPrice,\r\n}) {\r\n  const { locale, formatMessage } = useIntl();\r\n  const { deliveryCountry } = React.useContext(DataProvider);\r\n  const min = 0;\r\n  const max = 10000;\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <h1 className=\"text-xl font-semibold\">\r\n        {formatMessage({ id: 'price' })}{' '}\r\n        {deliveryCountry?.currency.translation[locale].symbol}\r\n      </h1>\r\n      <hr className=\"my-2\" />\r\n      <div className=\"p-3\">\r\n        <Range\r\n          step={0.1}\r\n          min={min}\r\n          rtl={locale === 'ar'}\r\n          max={max}\r\n          values={priceFilters}\r\n          onChange={handlePriceChange}\r\n          renderTrack={({ props, children }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                ...props.style,\r\n                height: '6px',\r\n                width: '100%',\r\n                backgroundColor: '#ccc',\r\n              }}\r\n            >\r\n              {children}\r\n            </div>\r\n          )}\r\n          renderThumb={({ props }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                ...props.style,\r\n                height: '15px',\r\n                width: '15px',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#999',\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"mb-3\"\r\n        style={{ display: 'grid', gridTemplateColumns: '0.5fr 1fr 0.5fr' }}\r\n      >\r\n        <div className=\"text-center\">{min}</div>\r\n        <div className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            value={priceFilters[0]}\r\n            onChange={handleChangePriceInput}\r\n            className=\"p-1 text-center border rounded-lg min-w-0\"\r\n          />\r\n        </div>\r\n        <div className=\"text-center\">{max}</div>\r\n      </div>\r\n      <div className=\"flex items-center justify-center\">\r\n        <button\r\n          className=\"px-2 py-1 bg-green-700 text-main-text rounded\"\r\n          onClick={handleSubmitPrice}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n// import { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport LeftSideBrands from './LeftSideBrands';\r\nimport LeftSidePrice from './LeftSidePrice';\r\n// import { getCategories } from '../../Queries/Queries';\r\n\r\nexport default function CategoryLeftSide({\r\n  productsLoading,\r\n\r\n  handlePriceChange,\r\n  products,\r\n\r\n  categoryInfo,\r\n  categoryInfoLoading,\r\n  brandFilters,\r\n  handleChangePriceInput,\r\n  handleBrandChange,\r\n  priceFilters,\r\n  handleSubmitPrice,\r\n}) {\r\n  const { locale, formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className=\"py-2\">\r\n      {!categoryInfoLoading && (\r\n        <div className=\"mb-4\">\r\n          <h1 className=\"text-xl font-semibold\">\r\n            {formatMessage({ id: 'categories' })}\r\n          </h1>\r\n          <hr className=\"my-2\" />\r\n\r\n          <div className=\"my-2\">\r\n            <div className=\"flex justify-between\">\r\n              <h1 className=\"font-semibold text-sm\">\r\n                {categoryInfo.translation[locale].name}\r\n              </h1>\r\n            </div>\r\n            {categoryInfo.children.length !== 0 &&\r\n              categoryInfo.children.map((subCategory, i) => (\r\n                <Link\r\n                  to={`/${locale}/categories/${subCategory.slug}`}\r\n                  key={i}\r\n                  className=\"text-sm block hover:underline hover:text-blue-700\"\r\n                >\r\n                  {subCategory.translation[locale].name}\r\n                </Link>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Brands */}\r\n      {!productsLoading && (\r\n        <LeftSideBrands\r\n          products={products}\r\n          brandFilters={brandFilters}\r\n          handleBrandChange={handleBrandChange}\r\n        />\r\n      )}\r\n      {/* Price */}\r\n      {!productsLoading && (\r\n        <LeftSidePrice\r\n          products={products}\r\n          priceFilters={priceFilters}\r\n          handlePriceChange={handlePriceChange}\r\n          handleChangePriceInput={handleChangePriceInput}\r\n          handleSubmitPrice={handleSubmitPrice}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { AnimateSharedLayout, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Select from 'react-select';\r\nconst sortByOptions = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { label: 'Price (Low to High)', value: 'price-asc' },\r\n  { label: 'Price (High to Low)', value: 'price-desc' },\r\n];\r\nexport default function SortInfoPanel({\r\n  sortBy,\r\n  handleRemoveFilters,\r\n  filters,\r\n  handleSortByChange,\r\n}) {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 0.4fr',\r\n        marginBottom: '0.5rem',\r\n      }}\r\n    >\r\n      <AnimateSharedLayout>\r\n        <motion.div layout className=\"flex items-center\">\r\n          {filters.length !== 0 && (\r\n            <>\r\n              <motion.h1 layout className=\"text-lg font-semibold\">\r\n                {formatMessage({ id: 'filtered-by' })}\r\n              </motion.h1>\r\n              <motion.div layout className=\"mx-1 flex items-center\">\r\n                {filters.map(item => {\r\n                  return (\r\n                    <motion.button\r\n                      layout\r\n                      className=\"mx-1 py-1 px-2 bg-main-color text-main-text rounded-full\"\r\n                      key={item.value}\r\n                      onClick={() => handleRemoveFilters(item.type)}\r\n                    >\r\n                      {formatMessage({ id: item.type })} : {item.value}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </motion.div>\r\n            </>\r\n          )}\r\n        </motion.div>\r\n      </AnimateSharedLayout>\r\n      <Select\r\n        isSearchable={false}\r\n        options={sortByOptions}\r\n        value={sortBy}\r\n        onChange={handleSortByChange}\r\n        placeholder=\"Sort By\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\nimport CategoryItemLoader from './CategoryItemLoader';\r\nimport CategoryProductItem from './CategoryProductItem';\r\nimport SortInfoPanel from './SortInfoPanel';\r\nimport VariantCategoryProductItem from './VariantCategoryProductItem';\r\n\r\nexport default function CategoryRightSide({\r\n  products,\r\n  productsLoading,\r\n  categoryInfoLoading,\r\n  sortBy,\r\n  filteredProducts,\r\n  filteredProductsLoading,\r\n  filtersApplied,\r\n  handleRemoveFilters,\r\n  handleSortByChange,\r\n  filters,\r\n}) {\r\n  if (productsLoading || categoryInfoLoading) {\r\n    return (\r\n      <div className=\"py-2\">\r\n        <ContentLoader\r\n          speed={2}\r\n          viewBox=\"0 0 752 38\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          foregroundColor=\"#ecebeb\"\r\n        >\r\n          <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"100%\" height=\"38\" />\r\n        </ContentLoader>\r\n        <div className=\"search-page-items__grid py-2  min-h-screen\">\r\n          {[0, 1, 2, 3, 4, 5, 6, 7, 8].map(i => {\r\n            return <CategoryItemLoader key={i} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"py-2\">\r\n      <SortInfoPanel\r\n        sortBy={sortBy}\r\n        filters={filters}\r\n        handleRemoveFilters={handleRemoveFilters}\r\n        handleSortByChange={handleSortByChange}\r\n      />\r\n      {products.length !== 0 && (\r\n        <div className=\"category-page-items__grid py-2 \">\r\n          {!filtersApplied &&\r\n            products.map(item => {\r\n              return item.type === 'simple' ? (\r\n                <CategoryProductItem key={item.id} item={item} />\r\n              ) : (\r\n                <VariantCategoryProductItem key={item.id} item={item} />\r\n              );\r\n            })}\r\n          {filtersApplied &&\r\n            filteredProductsLoading &&\r\n            [0, 1, 2, 3, 4, 5, 6, 7, 8].map(i => {\r\n              return <CategoryItemLoader key={i} />;\r\n            })}\r\n          {filtersApplied &&\r\n            !filteredProductsLoading &&\r\n            filteredProducts &&\r\n            filteredProducts.map(item => {\r\n              return item.type === 'simple' ? (\r\n                <CategoryProductItem key={item.id} item={item} />\r\n              ) : (\r\n                <VariantCategoryProductItem key={item.id} item={item} />\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      {products.length === 0 && (\r\n        <div className=\"p-4 text-2xl h-full flex items-center justify-center\">\r\n          <h1>We Couldn't Find any items that belongs to this category</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport 'swiper/swiper-bundle.css';\r\nimport LazyImage from '../../helpers/LazyImage';\r\nSwiperCore.use([Navigation]);\r\nexport default function CategoryChildren({ categoryInfo }) {\r\n  const { locale } = useIntl();\r\n  const breakpoints = {\r\n    // when window width is >= 320px\r\n    320: {\r\n      slidesPerView: 2,\r\n      spaceBetween: 20,\r\n    },\r\n    // when window width is >= 480px\r\n    480: {\r\n      slidesPerView: 3,\r\n      spaceBetween: 20,\r\n    },\r\n    // when window width is >= 640px\r\n    640: {\r\n      slidesPerView: 4,\r\n      spaceBetween: 20,\r\n    },\r\n    860: {\r\n      slidesPerView: 5,\r\n      spaceBetween: 20,\r\n    },\r\n    1100: {\r\n      slidesPerView: 7,\r\n      spaceBetween: 20,\r\n    },\r\n    1440: {\r\n      slidesPerView: 8,\r\n      spaceBetween: 20,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Swiper navigation id=\"main\" className=\"my-3\" breakpoints={breakpoints}>\r\n      {categoryInfo.children.map(child => {\r\n        return (\r\n          <SwiperSlide\r\n            key={child.id}\r\n            className={`overflow-hidden border my-2  relative bg-gray-100\r\n             shadow\r\n            rounded`}\r\n          >\r\n            <Link to={`/${locale}/categories/${child.slug}`}>\r\n              {/* <div className=\"p-2\"> */}\r\n              <LazyImage\r\n                src={`${process.env.REACT_APP_IMAGES_URL}/original/${child.image?.link}`}\r\n                alt={child.translation[locale].name}\r\n                pb=\"calc(100% * 286/210)\"\r\n              />\r\n              {/* </div> */}\r\n              <h1 className=\"font-semibold text-center p-1\">\r\n                {child.translation[locale].name}\r\n              </h1>\r\n            </Link>\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\nimport { useIntl } from 'react-intl';\r\nimport CategoryChildren from './CategoryChildren';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\nimport LazyImage from '../../helpers/LazyImage';\r\nexport default function CategoryHeader({ categoryInfo, categoryInfoLoading }) {\r\n  const { locale } = useIntl();\r\n  if (categoryInfoLoading) {\r\n    return (\r\n      <>\r\n        <ContentLoader\r\n          speed={4}\r\n          viewBox=\"0 0 1440 300\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          foregroundColor=\"#ecebeb\"\r\n        >\r\n          <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"100%\" height=\"300\" />\r\n        </ContentLoader>\r\n        <Swiper\r\n          navigation\r\n          id=\"main\"\r\n          slidesPerView={7}\r\n          spaceBetween={15}\r\n          className=\"my-3\"\r\n          // breakpoints={breakpoints}\r\n        >\r\n          {[0, 1, 2, 3, 4, 5, 6].map(i => {\r\n            return (\r\n              <SwiperSlide key={i} className=\"my-2\">\r\n                <ContentLoader\r\n                  speed={4}\r\n                  viewBox=\"0 0   171 258.36\"\r\n                  backgroundColor=\"#f3f3f3\"\r\n                  foregroundColor=\"#ecebeb\"\r\n                >\r\n                  <rect\r\n                    x=\"0\"\r\n                    y=\"0\"\r\n                    rx=\"5\"\r\n                    ry=\"5\"\r\n                    width=\"100%\"\r\n                    height=\"258.36\"\r\n                  />\r\n                </ContentLoader>\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n        </Swiper>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <LazyImage\r\n        src={`${process.env.REACT_APP_IMAGES_URL}/original/${categoryInfo.cover_desktop?.link}`}\r\n        alt={categoryInfo.translation[locale].name}\r\n        pb=\"calc(100% * 300/1440)\"\r\n      />\r\n      {categoryInfo.children.length !== 0 && (\r\n        <CategoryChildren categoryInfo={categoryInfo} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport CategoryLeftSide from '../components/Category/CategoryLeftSide';\r\nimport CategoryRightSide from '../components/Category/CategoryRightSide';\r\n// import Breadcrumbs from '../components/SingleProduct/Breadcrumbs';\r\n// import { SearchProvider } from '../contexts/SearchContext';\r\nimport Layout from '../components/Layout';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  getCategoryProducts,\r\n  getSingleCategoryInfo,\r\n  filterProducts,\r\n} from '../Queries/Queries';\r\nimport CategoryHeader from '../components/Category/CategoryHeader';\r\nimport { useIntl } from 'react-intl';\r\nexport default function Category() {\r\n  const { category } = useParams();\r\n  const { locale } = useIntl();\r\n  const [brandFilters, setBrandFilters] = React.useState(null);\r\n  const [sortBy, setSortBy] = React.useState(null);\r\n  const [page, setPage] = React.useState(1);\r\n  const [resultsPerPage, setResultsPerPage] = React.useState(10);\r\n\r\n  const [filtersApplied, setFiltersApplied] = React.useState(false);\r\n  const [priceFilters, setPriceFilters] = React.useState([10000]);\r\n  const [filters, setFilters] = React.useState([]);\r\n\r\n  /**\r\n   * Main Fetch\r\n   */\r\n\r\n  const { data: products, isLoading: productsLoading } = useQuery(\r\n    ['category-products', category],\r\n    getCategoryProducts,\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n  const { data: categoryInfo, isLoading: categoryInfoLoading } = useQuery(\r\n    ['categoryInfo', category],\r\n    getSingleCategoryInfo,\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n  const {\r\n    data: filteredProducts,\r\n    isLoading: filteredProductsLoading,\r\n  } = useQuery(\r\n    [\r\n      'filtered-products',\r\n      {\r\n        category: categoryInfo?.id,\r\n        brandFilters,\r\n        sortBy,\r\n        page,\r\n        resultsPerPage,\r\n        locale,\r\n        priceFilters,\r\n      },\r\n    ],\r\n    filterProducts,\r\n    { retry: true, refetchOnWindowFocus: false, enabled: filtersApplied }\r\n  );\r\n  const handleRemoveFilters = type => {\r\n    setFilters(prev => {\r\n      return prev.filter(i => i.type !== type);\r\n    });\r\n    if (type === 'Brand') {\r\n      setBrandFilters(null);\r\n    }\r\n    if (type === 'Sort') {\r\n      setSortBy(null);\r\n    }\r\n    if (type === 'Price') {\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Price');\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePriceChange = values => {\r\n    setPriceFilters(values);\r\n  };\r\n  const handleChangePriceInput = e => {\r\n    if (e.target.value < 0) return;\r\n    if (e.target.value > 10000) return;\r\n    setPriceFilters([e.target.value]);\r\n  };\r\n  const handleSubmitPrice = () => {\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Price');\r\n      newArr.push({ type: 'Price', value: `Max ${priceFilters[0]}` });\r\n      return newArr;\r\n    });\r\n  };\r\n  const handleSortByChange = selectedValue => {\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Sort');\r\n      newArr.push({ type: 'Sort', value: selectedValue.label });\r\n      return newArr;\r\n    });\r\n    setSortBy(selectedValue);\r\n  };\r\n  const handleBrandChange = brand => {\r\n    if (brandFilters === brand) {\r\n      setBrandFilters(null);\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Brand');\r\n      });\r\n    } else {\r\n      setFilters(prev => {\r\n        let newArr = prev.filter(i => i.type !== 'Brand');\r\n        newArr.push({ type: 'Brand', value: brand });\r\n\r\n        return newArr;\r\n      });\r\n      setBrandFilters(brand);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (filters.length === 0) {\r\n      setFiltersApplied(false);\r\n    } else {\r\n      setFiltersApplied(true);\r\n    }\r\n  }, [filters]);\r\n  return (\r\n    <Layout>\r\n      <Helmet>\r\n        <title>Search</title>\r\n      </Helmet>\r\n      <div\r\n        className=\"max-w-default mx-auto p-4 overflow-hidden\"\r\n        style={{ minHeight: 'calc(100vh - 150px)' }}\r\n      >\r\n        <CategoryHeader\r\n          categoryInfo={categoryInfo}\r\n          categoryInfoLoading={categoryInfoLoading}\r\n        />\r\n        {/* <Breadcrumbs data={categories} /> */}\r\n        <div className=\"search-page__container\">\r\n          <CategoryLeftSide\r\n            categoryInfo={categoryInfo}\r\n            categoryInfoLoading={categoryInfoLoading}\r\n            products={products}\r\n            productsLoading={productsLoading}\r\n            brandFilters={brandFilters}\r\n            setBrandFilters={setBrandFilters}\r\n            handleBrandChange={handleBrandChange}\r\n            priceFilters={priceFilters}\r\n            handlePriceChange={handlePriceChange}\r\n            handleChangePriceInput={handleChangePriceInput}\r\n            handleSubmitPrice={handleSubmitPrice}\r\n          />\r\n\r\n          <CategoryRightSide\r\n            products={products}\r\n            productsLoading={productsLoading}\r\n            categoryInfoLoading={categoryInfoLoading}\r\n            sortBy={sortBy}\r\n            setPage={setPage}\r\n            setResultsPerPage={setResultsPerPage}\r\n            filteredProducts={filteredProducts}\r\n            filteredProductsLoading={filteredProductsLoading}\r\n            filtersApplied={filtersApplied}\r\n            filters={filters}\r\n            handleRemoveFilters={handleRemoveFilters}\r\n            handleSortByChange={handleSortByChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}