{"version":3,"sources":["pages/SearchResultsMobile.js"],"names":["SearchResultsMobile","query","useParams","useIntl","locale","formatMessage","React","useState","brandFilters","setBrandFilters","value","label","sortBy","setSortBy","page","setPage","filtersApplied","setFiltersApplied","priceFilters","setPriceFilters","filters","setFilters","cartMenuOpen","setCartMenuOpen","sortByOpen","setSortByOpen","filtersOpen","setFiltersOpen","useInView","triggerRef","inView","useQuery","searchProducts","retry","refetchOnWindowFocus","products","data","productsLoading","isLoading","search","resultsPerPage","filterProducts","enabled","filteredProducts","filteredProductsLoading","useEffect","length","className","key","setSideMenuOpen","div","initial","opacity","animate","exit","onClick","id","resolvePlural","layout","h1","map","item","button","type","prev","filter","i","handleBrandChange","brand","newArr","push","handleSortByChange","selectedValue","handleChangePriceInput","e","target","handlePriceChange","values","handleSubmitPrice"],"mappings":"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","file":"static/js/27.fb1fb3d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\nimport CategoryMobileItemGrid from '../components/CategoryMobile/CategoryMobileItemGrid';\r\nimport SortInfoPanelMobile from '../components/CategoryMobile/SortInfoPanelMobile';\r\nimport Layout from '../components/Layout';\r\nimport { filterProducts, searchProducts } from '../Queries/Queries';\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport SideCartMenuMobile from '../components/SingleProductMobile/SideCartMenuItemMobile';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nexport default function SearchResultsMobile() {\r\n  const { query } = useParams();\r\n  const { locale, formatMessage } = useIntl();\r\n  const [brandFilters, setBrandFilters] = React.useState(null);\r\n  const [sortBy, setSortBy] = React.useState({\r\n    value: 'newest',\r\n    label: 'Newest',\r\n  });\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const [filtersApplied, setFiltersApplied] = React.useState(false);\r\n  const [priceFilters, setPriceFilters] = React.useState([10000]);\r\n  const [filters, setFilters] = React.useState([]);\r\n  const [cartMenuOpen, setCartMenuOpen] = React.useState(false);\r\n  const [sortByOpen, setSortByOpen] = React.useState(false);\r\n  const [filtersOpen, setFiltersOpen] = React.useState(false);\r\n  const [triggerRef, inView] = useInView();\r\n\r\n  const { data: products, isLoading: productsLoading } = useQuery(\r\n    ['searchProducts', query],\r\n    searchProducts,\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n\r\n  const {\r\n    data: filteredProducts,\r\n    isLoading: filteredProductsLoading,\r\n  } = useQuery(\r\n    [\r\n      'filtered-products',\r\n      {\r\n        search: query,\r\n        brandFilters,\r\n        sortBy,\r\n        page,\r\n        resultsPerPage: 25,\r\n        locale,\r\n        priceFilters,\r\n      },\r\n    ],\r\n    filterProducts,\r\n    { retry: true, refetchOnWindowFocus: false, enabled: filtersApplied }\r\n  );\r\n\r\n  const handleRemoveFilters = type => {\r\n    setFilters(prev => {\r\n      return prev.filter(i => i.type !== type);\r\n    });\r\n    if (type === 'Brand') {\r\n      setBrandFilters(null);\r\n    }\r\n    if (type === 'Sort') {\r\n      setSortBy({\r\n        value: 'newest',\r\n        label: 'Newest',\r\n      });\r\n    }\r\n    if (type === 'Price') {\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Price');\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePriceChange = values => {\r\n    setPriceFilters(values);\r\n  };\r\n  const handleChangePriceInput = e => {\r\n    if (e.target.value < 0) return;\r\n    if (e.target.value > 10000) return;\r\n    setPriceFilters([e.target.value]);\r\n  };\r\n  const handleSubmitPrice = () => {\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Price');\r\n      newArr.push({ type: 'Price', value: `Max ${priceFilters[0]}` });\r\n      return newArr;\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = selectedValue => {\r\n    if (selectedValue.value === 'newest') {\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Sort');\r\n      });\r\n      setSortBy(selectedValue);\r\n      return;\r\n    }\r\n    setFilters(prev => {\r\n      let newArr = prev.filter(i => i.type !== 'Sort');\r\n      newArr.push({ type: 'Sort', value: selectedValue.label });\r\n      return newArr;\r\n    });\r\n    setSortBy(selectedValue);\r\n  };\r\n  const handleBrandChange = brand => {\r\n    if (brandFilters === brand) {\r\n      setBrandFilters(null);\r\n      setFilters(prev => {\r\n        return prev.filter(i => i.type !== 'Brand');\r\n      });\r\n    } else {\r\n      setFilters(prev => {\r\n        let newArr = prev.filter(i => i.type !== 'Brand');\r\n        newArr.push({ type: 'Brand', value: brand });\r\n\r\n        return newArr;\r\n      });\r\n      setBrandFilters(brand);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (filters.length === 0) {\r\n      setFiltersApplied(false);\r\n    } else {\r\n      setFiltersApplied(true);\r\n    }\r\n  }, [filters]);\r\n  const resolvePlural = () => {\r\n    switch (products.length) {\r\n      case 1:\r\n        return formatMessage({ id: 'one-search-results' });\r\n\r\n      case 2:\r\n        return formatMessage({ id: 'two-search-results' });\r\n\r\n      case products.length > 10:\r\n        return formatMessage({ id: 'more-than-10-search-results' });\r\n      default:\r\n        return formatMessage({ id: 'search-results' });\r\n    }\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"min-h-screen relative\">\r\n        <AnimatePresence>\r\n          {cartMenuOpen && (\r\n            <SideCartMenuMobile\r\n              key=\"side-cart\"\r\n              setSideMenuOpen={setCartMenuOpen}\r\n            />\r\n          )}\r\n          {cartMenuOpen && (\r\n            <motion.div\r\n              key=\"sidecart-bg\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 0.5 }}\r\n              exit={{ opacity: 0 }}\r\n              onClick={() => setCartMenuOpen(false)}\r\n              className=\"side__addCart-bg\"\r\n            ></motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n        {products && (\r\n          <div className=\"p-3 text-lg border-b\">\r\n            <h1>\r\n              {products.length > 2 && products.length} {resolvePlural()}{' '}\r\n              <strong>{query}</strong>\r\n            </h1>\r\n          </div>\r\n        )}\r\n        <AnimateSharedLayout>\r\n          <motion.div layout className=\"px-3\">\r\n            {filters.length !== 0 && (\r\n              <>\r\n                <motion.h1 layout className=\"text-lg mb-2 font-semibold\">\r\n                  {formatMessage({ id: 'filtered-by' })} :\r\n                </motion.h1>\r\n                <motion.div layout className=\"flex items-center\">\r\n                  {filters.map(item => {\r\n                    return (\r\n                      <motion.button\r\n                        layout\r\n                        className=\"mx-1 py-1 px-3 bg-main-color text-main-text rounded-full\"\r\n                        key={item.value}\r\n                        onClick={() => handleRemoveFilters(item.type)}\r\n                      >\r\n                        {formatMessage({ id: item.type })} :{' '}\r\n                        {formatMessage({ id: item.value })}\r\n                      </motion.button>\r\n                    );\r\n                  })}\r\n                </motion.div>\r\n                <hr className=\"my-3\" />\r\n              </>\r\n            )}\r\n          </motion.div>\r\n        </AnimateSharedLayout>\r\n\r\n        <CategoryMobileItemGrid\r\n          products={products}\r\n          productsLoading={productsLoading}\r\n          setCartMenuOpen={setCartMenuOpen}\r\n          filteredProducts={filteredProducts}\r\n          filteredProductsLoading={filteredProductsLoading}\r\n          triggerRef={triggerRef}\r\n          setPage={setPage}\r\n        />\r\n        <AnimatePresence>\r\n          {inView && (\r\n            <SortInfoPanelMobile\r\n              productsLoading={productsLoading}\r\n              products={products}\r\n              brandFilters={brandFilters}\r\n              handleBrandChange={handleBrandChange}\r\n              filtersApplied={filtersApplied}\r\n              setSortByOpen={setSortByOpen}\r\n              setFiltersOpen={setFiltersOpen}\r\n              filtersOpen={filtersOpen}\r\n              sortByOpen={sortByOpen}\r\n              sortBy={sortBy}\r\n              handleSortByChange={handleSortByChange}\r\n              handleChangePriceInput={handleChangePriceInput}\r\n              handlePriceChange={handlePriceChange}\r\n              handleSubmitPrice={handleSubmitPrice}\r\n              priceFilters={priceFilters}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}