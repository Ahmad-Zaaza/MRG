{"version":3,"sources":["../node_modules/react-range/lib/types.js","../node_modules/react-range/lib/utils.js","../node_modules/react-range/lib/index.js","../node_modules/react-range/lib/Range.js"],"names":["Object","defineProperty","exports","value","Direction","__spreadArrays","this","s","i","il","arguments","length","r","Array","k","a","j","jl","react_1","require","types_1","isVertical","direction","Up","Down","translate","element","x","y","style","transform","getStepDecimals","step","decimals","toString","split","isTouchEvent","event","touches","changedTouches","isStepDivisible","min","max","res","parseInt","normalizeValue","index","allowOverlap","values","BIG_NUM","Math","round","prev","next","remainder","floor","closestLowerNum","abs","rounded","decimalPlaces","parseFloat","toFixed","relativeValue","checkBoundaries","RangeError","checkInitialOverlap","slice","every","item","getMargin","window","getComputedStyle","top","bottom","left","right","getPaddingAndBorder","translateThumbs","elements","offsets","rtl","inverter","forEach","getClosestThumbIndex","thumbs","clientX","clientY","thumbIndex","minThumbDistance","getThumbDistance","thumbDistance","schd","fn","lastArgs","frameId","args","_i","requestAnimationFrame","apply","replaceAt","ret","getTrackBackground","_a","colors","_b","Right","_c","Left","middle","sort","b","map","reduce","acc","point","voidFn","assertUnreachable","Error","getThumbWidth","thumbEl","separator","valueToLabel","ceil","from","children","width","el","elWidth","getBoundingClientRect","innerText","includes","childElementCount","elClone","cloneNode","innerHTML","visibility","document","body","appendChild","removeChild","height","useThumbOverlap","rangeRef","useState","labelStyle","setLabelStyle","labelValue","setLabelValue","useEffect","getThumbs","newStyle","offsets_1","getOffsets","overlaps","buildOverlaps","thumbXWidth","thumbX","siblingIndex","siblingX","siblingWidth","push","Set","getOverlaps","labelValue_1","offsetsX","c","labelValues_1","thumb","join","first","last","lastWidth","indexOf","__importDefault","mod","__esModule","Range_1","Range","default","utils_1","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","prototype","create","__importStar","result","call","React","INCREASE_KEYS","DECREASE_KEYS","_super","props","_this","trackRef","createRef","thumbRefs","markRefs","state","draggedTrackPos","draggedThumbIndex","thumbZIndexes","fill","t","isChanged","markOffsets","trackElement","current","trackRect","trackPadding","thumbOffsets","thumbRect","thumbMargins","filter","hasAttribute","console","warn","getTargetIndex","e","findIndex","child","target","contains","addTouchEvents","addEventListener","schdOnTouchMove","passive","schdOnEnd","addMouseEvents","schdOnMouseMove","onMouseDownTrack","button","persist","preventDefault","nativeEvent","draggableTrack","some","thumbRef","setState","onMove","focus","onResize","calculateMarkOffsets","onTouchStartTrack","onMouseOrTouchStart","disabled","isTouch","onMouseMove","onTouchMove","onKeyDown","onChange","key","fireOnFinalChange","onKeyUp","trackLength","dX","dY","deltaValue","sign","thumbValue","newValues","newValue","onEnd","removeEventListener","onFinalChange","renderMark","elStyles","trackWidth","trackHeight","paddingLeft","paddingTop","numOfMarks","markHeight","markWidth","markRect","schdOnResize","componentDidMount","resizeObserver","ResizeObserver","observe","unobserve","componentDidUpdate","prevProps","componentWillUnmount","render","renderTrack","renderThumb","cursor","onMouseDown","onTouchStart","ref","isDragged","offset","position","marginTop","marginLeft","zIndex","userSelect","touchAction","WebkitUserSelect","MozUserSelect","msUserSelect","tabIndex","undefined","draggable","role","defaultProps","Component"],"mappings":"2GACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,SAAWC,GACPA,EAAS,MAAY,WACrBA,EAAS,KAAW,UACpBA,EAAS,KAAW,YACpBA,EAAS,GAAS,SAJtB,CAKeF,EAAQE,YAAcF,EAAQE,UAAY,M,iCCPzD,IAAIC,EAAkBC,MAAQA,KAAKD,gBAAmB,WAClD,IAAK,IAAIE,EAAI,EAAGC,EAAI,EAAGC,EAAKC,UAAUC,OAAQH,EAAIC,EAAID,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIC,EAAIC,MAAMN,GAAIO,EAAI,EAA3B,IAA8BN,EAAI,EAAGA,EAAIC,EAAID,IACzC,IAAK,IAAIO,EAAIL,UAAUF,GAAIQ,EAAI,EAAGC,EAAKF,EAAEJ,OAAQK,EAAIC,EAAID,IAAKF,IAC1DF,EAAEE,GAAKC,EAAEC,GACjB,OAAOJ,GAEXZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIe,EAAUC,EAAQ,GAClBC,EAAUD,EAAQ,KAkDtB,SAASE,EAAWC,GAChB,OAAOA,IAAcF,EAAQhB,UAAUmB,IAAMD,IAAcF,EAAQhB,UAAUoB,KAsEjF,SAASC,EAAUC,EAASC,EAAGC,GAC3BF,EAAQG,MAAMC,UAAY,aAAeH,EAAI,OAASC,EAAI,MAzH9D1B,EAAQ6B,gBAAkB,SAAUC,GAChC,IAAIC,EAAWD,EAAKE,WAAWC,MAAM,KAAK,GAC1C,OAAOF,EAAWA,EAAStB,OAAS,GAMxCT,EAAQkC,aAJR,SAAsBC,GAClB,OAASA,EAAMC,SAAWD,EAAMC,QAAQ3B,QACnC0B,EAAME,gBAAkBF,EAAME,eAAe5B,QAOtDT,EAAQsC,gBAJR,SAAyBC,EAAKC,EAAKV,GAC/B,IAAIW,GAAOD,EAAMD,GAAOT,EACxB,OAAOY,SAASD,EAAIT,WAAY,MAAQS,GAiC5CzC,EAAQ2C,eA9BR,SAAwB1C,EAAO2C,EAAOL,EAAKC,EAAKV,EAAMe,EAAcC,GAChE,IAAIC,EAAU,KAEd,GADA9C,EAAQ+C,KAAKC,MAAMhD,EAAQ8C,GAAWA,GACjCF,EAAc,CACf,IAAIK,EAAOJ,EAAOF,EAAQ,GACtBO,EAAOL,EAAOF,EAAQ,GAC1B,GAAIM,GAAQA,EAAOjD,EACf,OAAOiD,EACX,GAAIC,GAAQA,EAAOlD,EACf,OAAOkD,EAEf,GAAIlD,EAAQuC,EACR,OAAOA,EACX,GAAIvC,EAAQsC,EACR,OAAOA,EAIX,IAAIa,EAAYJ,KAAKK,MAAMpD,EAAQ8C,EAAUR,EAAMQ,GAC/CC,KAAKK,MAAMvB,EAAOiB,GAClBO,EAAkBN,KAAKK,MAAMpD,EAAQ8C,EAAUC,KAAKO,IAAIH,IACxDI,EAAwB,IAAdJ,EAAkBnD,EAAQqD,EAAkBP,EAGtDN,EAAMO,KAAKO,IAAIH,EAAYL,GAAWjB,EAAO,EAC3C0B,EACAA,EAAU1B,EACZ2B,EAAgBzD,EAAQ6B,gBAAgBC,GAC5C,OAAO4B,WAAWjB,EAAIkB,QAAQF,KAMlCzD,EAAQ4D,cAHR,SAAuB3D,EAAOsC,EAAKC,GAC/B,OAAQvC,EAAQsC,IAAQC,EAAMD,IAMlCvC,EAAQmB,WAAaA,EAYrBnB,EAAQ6D,gBAXR,SAAyB5D,EAAOsC,EAAKC,GACjC,GAAID,GAAOC,EACP,MAAM,IAAIsB,WAAW,QAAUvB,EAAM,+BAAiCC,EAAM,KAEhF,GAAIvC,EAAQsC,EACR,MAAM,IAAIuB,WAAW,UAAY7D,EAAQ,0BAA4BsC,EAAM,KAE/E,GAAItC,EAAQuC,EACR,MAAM,IAAIsB,WAAW,UAAY7D,EAAQ,yBAA2BuC,EAAM,MAWlFxC,EAAQ+D,oBAPR,SAA6BjB,GACzB,KAAIA,EAAOrC,OAAS,KAEfqC,EAAOkB,MAAM,GAAGC,OAAM,SAAUC,EAAM5D,GAAK,OAAOwC,EAAOxC,IAAM4D,KAChE,MAAM,IAAIJ,WAAW,YAAchB,EAAS,oDAapD9C,EAAQmE,UATR,SAAmB3C,GACf,IAAIG,EAAQyC,OAAOC,iBAAiB7C,GACpC,MAAO,CACH8C,IAAK5B,SAASf,EAAM,cAAe,IACnC4C,OAAQ7B,SAASf,EAAM,iBAAkB,IACzC6C,KAAM9B,SAASf,EAAM,eAAgB,IACrC8C,MAAO/B,SAASf,EAAM,gBAAiB,MAa/C3B,EAAQ0E,oBATR,SAA6BlD,GACzB,IAAIG,EAAQyC,OAAOC,iBAAiB7C,GACpC,MAAO,CACH8C,IAAK5B,SAASf,EAAM,eAAgB,IAAMe,SAASf,EAAM,oBAAqB,IAC9E4C,OAAQ7B,SAASf,EAAM,kBAAmB,IAAMe,SAASf,EAAM,uBAAwB,IACvF6C,KAAM9B,SAASf,EAAM,gBAAiB,IAAMe,SAASf,EAAM,qBAAsB,IACjF8C,MAAO/B,SAASf,EAAM,iBAAkB,IAAMe,SAASf,EAAM,sBAAuB,MAU5F3B,EAAQ2E,gBANR,SAAyBC,EAAUC,EAASC,GACxC,IAAIC,EAAWD,GAAO,EAAI,EAC1BF,EAASI,SAAQ,SAAUxD,EAASoB,GAChC,OAAOrB,EAAUC,EAASuD,EAAWF,EAAQjC,GAAOnB,EAAGoD,EAAQjC,GAAOlB,OAuB9E1B,EAAQiF,qBAZR,SAA8BC,EAAQC,EAASC,EAAShE,GAGpD,IAFA,IAAIiE,EAAa,EACbC,EAAmBC,EAAiBL,EAAO,GAAIC,EAASC,EAAShE,GAC5Dd,EAAI,EAAGA,EAAI4E,EAAOzE,OAAQH,IAAK,CACpC,IAAIkF,EAAgBD,EAAiBL,EAAO5E,GAAI6E,EAASC,EAAShE,GAC9DoE,EAAgBF,IAChBA,EAAmBE,EACnBH,EAAa/E,GAGrB,OAAO+E,GAMXrF,EAAQuB,UAAYA,EAEpBvB,EAAQyF,KAAO,SAAUC,GACrB,IAAIC,EAAW,GACXC,EAAU,KAed,OAdgB,WAEZ,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKtF,UAAUC,OAAQqF,IACpCD,EAAKC,GAAMtF,UAAUsF,GAEzBH,EAAWE,EACPD,IAGJA,EAAUG,uBAAsB,WAC5BH,EAAU,KACVF,EAAGM,WAAM,EAAQL,SAU7B3F,EAAQiG,UALR,SAAmBnD,EAAQF,EAAO3C,GAC9B,IAAIiG,EAAMpD,EAAOkB,MAAM,GAEvB,OADAkC,EAAItD,GAAS3C,EACNiG,GAkBXlG,EAAQmG,mBAfR,SAA4BC,GACxB,IAAItD,EAASsD,EAAGtD,OAAQuD,EAASD,EAAGC,OAAQ9D,EAAM6D,EAAG7D,IAAKC,EAAM4D,EAAG5D,IAAK8D,EAAKF,EAAGhF,UAAWA,OAAmB,IAAPkF,EAAgBpF,EAAQhB,UAAUqG,MAAQD,EAAIE,EAAKJ,EAAGtB,IAAKA,OAAa,IAAP0B,GAAwBA,EAC5L1B,GAAO1D,IAAcF,EAAQhB,UAAUqG,MACvCnF,EAAYF,EAAQhB,UAAUuG,KAEzB3B,GAAO5D,EAAQhB,UAAUuG,OAC9BrF,EAAYF,EAAQhB,UAAUqG,OAGlC,IACIG,EADW5D,EAAOkB,MAAM,GAAG2C,MAAK,SAAU9F,EAAG+F,GAAK,OAAO/F,EAAI+F,KAAMC,KAAI,SAAU5G,GAAS,OAASA,EAAQsC,IAAQC,EAAMD,GAAQ,OAC/GuE,QAAO,SAAUC,EAAKC,EAAOpE,GAC/C,OAAOmE,EAAM,KAAOV,EAAOzD,GAAS,IAAMoE,EAAQ,MAAQX,EAAOzD,EAAQ,GAAK,IAAMoE,EAAQ,MAC7F,IACH,MAAO,mBAAqB5F,EAAY,KAAOiF,EAAO,GAAK,MAAQK,EAAS,KAAOL,EAAOA,EAAO5F,OAAS,GAAK,UAInHT,EAAQiH,OADR,aAKAjH,EAAQkH,kBAHR,SAA2BzF,GACvB,MAAM,IAAI0F,MAAM,8BAUpB,IAAIC,EAAgB,SAAUC,EAASpH,EAAOqH,EAAW7D,EAAe8D,GAqBpE,YApBqB,IAAjBA,IAA2BA,EAAe,SAAUtH,GAAS,OAAOA,IAC5D+C,KAAKwE,KAAKrH,EAAe,CAACkH,GAAU1G,MAAM8G,KAAKJ,EAAQK,WAAWZ,QAAO,SAAUa,EAAOC,GAClG,IAAIC,EAAU7E,KAAKwE,KAAKI,EAAGE,wBAAwBH,OAMnD,GAAIC,EAAGG,WACHH,EAAGG,UAAUC,SAASV,IACG,IAAzBM,EAAGK,kBAAyB,CAC5B,IAAIC,EAAUN,EAAGO,WAAU,GAC3BD,EAAQE,UAAYb,EAAatH,EAAM0D,QAAQF,IAC/CyE,EAAQvG,MAAM0G,WAAa,SAC3BC,SAASC,KAAKC,YAAYN,GAC1BL,EAAU7E,KAAKwE,KAAKU,EAAQJ,wBAAwBH,OACpDW,SAASC,KAAKE,YAAYP,GAE9B,OAAOL,EAAUF,EAAQE,EAAUF,IACpCN,EAAQS,wBAAwBH,SA8JvC,SAASpC,EAAiB8B,EAASlC,EAASC,EAAShE,GACjD,IAAIgF,EAAKiB,EAAQS,wBAAyBrG,EAAI2E,EAAG3E,EAAGC,EAAI0E,EAAG1E,EAAGiG,EAAQvB,EAAGuB,MAAOe,EAAStC,EAAGsC,OAC5F,OAAOvH,EAAWC,GAAa4B,KAAKO,IAAI6B,GAAW1D,EAAIgH,EAAS,IAAM1F,KAAKO,IAAI4B,GAAW1D,EAAIkG,EAAQ,IA/F1G3H,EAAQ2I,gBAAkB,SAAUC,EAAU9F,EAAQF,EAAOd,EAAMwF,EAAWC,QAC7D,IAATzF,IAAmBA,EAAO,SACZ,IAAdwF,IAAwBA,EAAY,YACnB,IAAjBC,IAA2BA,EAAe,SAAUtH,GAAS,OAAOA,IACxE,IAAIwD,EAAgBzD,EAAQ6B,gBAAgBC,GAExCsE,EAAKpF,EAAQ6H,SAAS,IAAKC,EAAa1C,EAAG,GAAI2C,EAAgB3C,EAAG,GAClEE,EAAKtF,EAAQ6H,SAAStB,EAAazE,EAAOF,GAAOe,QAAQF,KAAkBuF,EAAa1C,EAAG,GAAI2C,EAAgB3C,EAAG,GA4EtH,OA1EAtF,EAAQkI,WAAU,WACd,GAAIN,EAAU,CACV,IAAI1D,EAAS0D,EAASO,YACtB,GAAIjE,EAAOzE,OAAS,EAChB,OACJ,IAAI2I,EAAW,GACXC,EAAYT,EAASU,aAOrBC,EArEE,SAAU3G,EAAOiC,EAASK,EAAQpC,EAAQwE,EAAW7D,EAAe8D,QAC7D,IAAjBA,IAA2BA,EAAe,SAAUtH,GAAS,OAAOA,IACxE,IAAIsJ,EAAW,GAiCf,OA3BoB,SAAhBC,EAA0BnE,GAC1B,IAAIoE,EAAcrC,EAAclC,EAAOG,GAAavC,EAAOuC,GAAaiC,EAAW7D,EAAe8D,GAC9FmC,EAAS7E,EAAQQ,GAAY5D,EAOjCoD,EAAQG,SAAQ,SAAUoB,EAAIuD,GAC1B,IAAIC,EAAWxD,EAAG3E,EACdoI,EAAezC,EAAclC,EAAOyE,GAAe7G,EAAO6G,GAAerC,EAAW7D,EAAe8D,GACnGlC,IAAesE,IACbD,GAAUE,GAAYF,GAAUE,EAAWC,GACxCH,EAASD,GAAeG,GACrBF,EAASD,GAAeG,EAAWC,KACtCN,EAASvB,SAAS2B,KACnBJ,EAASO,KAAKzE,GACdkE,EAASO,KAAKH,GACdJ,EAAWpJ,EAAeoJ,EAAU,CAAClE,EAAYsE,IACjDH,EAAcG,QAK9BH,CAAc5G,GAEPjC,MAAM8G,KAAK,IAAIsC,IAAIR,EAAS5C,SAkCZqD,CAAYpH,EAAOyG,EAAWnE,EAAQpC,EAAQwE,EAAW7D,EAAe8D,GAEnF0C,EAAe1C,EAAazE,EAAOF,GAAOe,QAAQF,IAOtD,GAAI8F,EAAS9I,OAAQ,CAMjB,IAAIyJ,EAAWX,EAASzC,QAAO,SAAUjG,EAAGsJ,EAAG7J,EAAGD,GAC9C,OAAOQ,EAAEJ,OAASN,EAAeU,EAAG,CAACwI,EAAUhJ,EAAEC,IAAImB,IAAM,CAAC4H,EAAUhJ,EAAEC,IAAImB,KAC7E,IAKH,GAAIuB,KAAKT,IAAIyD,MAAMhD,KAAMkH,KAAcb,EAAUzG,GAAOnB,EAAG,CAMvD,IAAI2I,EAAgB,GACpBb,EAASvE,SAAQ,SAAUqF,GACvBD,EAAcN,KAAKhH,EAAOuH,GAAO1G,QAAQF,OAM7CwG,EAAetJ,MAAM8G,KAAK,IAAIsC,IAAIK,EAAczD,MAAK,SAAU9F,EAAG+F,GAAK,OAAOlD,WAAW7C,GAAK6C,WAAWkD,QACpGC,IAAIU,GACJ+C,KAAKhD,GAOV,IAAIiD,EAAQvH,KAAKT,IAAIyD,MAAMhD,KAAMkH,GAC7BM,EAAOxH,KAAKR,IAAIwD,MAAMhD,KAAMkH,GAC5BO,EAAYvF,EAAOqE,EAASW,EAASQ,QAAQF,KAAQ1C,wBAAwBH,MACjFyB,EAAS5E,KAAOxB,KAAKO,IAAIgH,GAASC,EAAOC,IAAc,EAAI,KAC3DrB,EAASxH,UAAY,0BAIrBwH,EAASf,WAAa,SAI9BY,EAAcgB,GACdlB,EAAcK,MAEnB,CAACR,EAAU9F,IACP,CAACkG,EAAYF,K,iCCrWxB,IAAI6B,EAAmBvK,MAAQA,KAAKuK,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExD9K,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAI6K,EAAUH,EAAgB1J,EAAQ,MACtCjB,EAAQ+K,MAAQD,EAAQE,QACxB,IAAIC,EAAUhK,EAAQ,KACtBjB,EAAQmG,mBAAqB8E,EAAQ9E,mBACrCnG,EAAQ2I,gBAAkBsC,EAAQtC,gBAClC3I,EAAQ4D,cAAgBqH,EAAQrH,cAChC,IAAI1C,EAAUD,EAAQ,KACtBjB,EAAQE,UAAYgB,EAAQhB,W,iCCX5B,IAAIgL,EAAa9K,MAAQA,KAAK8K,WAAe,WACzC,IAAIC,EAAgB,SAAUC,EAAGxE,GAI7B,OAHAuE,EAAgBrL,OAAOuL,gBAClB,CAAEC,UAAW,cAAgB3K,OAAS,SAAUyK,EAAGxE,GAAKwE,EAAEE,UAAY1E,IACvE,SAAUwE,EAAGxE,GAAK,IAAK,IAAI2E,KAAK3E,EAAOA,EAAE4E,eAAeD,KAAIH,EAAEG,GAAK3E,EAAE2E,MACpDH,EAAGxE,IAE5B,OAAO,SAAUwE,EAAGxE,GAEhB,SAAS6E,IAAOrL,KAAKsL,YAAcN,EADnCD,EAAcC,EAAGxE,GAEjBwE,EAAEO,UAAkB,OAAN/E,EAAa9G,OAAO8L,OAAOhF,IAAM6E,EAAGE,UAAY/E,EAAE+E,UAAW,IAAIF,IAV1C,GAazCtL,EAAkBC,MAAQA,KAAKD,gBAAmB,WAClD,IAAK,IAAIE,EAAI,EAAGC,EAAI,EAAGC,EAAKC,UAAUC,OAAQH,EAAIC,EAAID,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIC,EAAIC,MAAMN,GAAIO,EAAI,EAA3B,IAA8BN,EAAI,EAAGA,EAAIC,EAAID,IACzC,IAAK,IAAIO,EAAIL,UAAUF,GAAIQ,EAAI,EAAGC,EAAKF,EAAEJ,OAAQK,EAAIC,EAAID,IAAKF,IAC1DF,EAAEE,GAAKC,EAAEC,GACjB,OAAOJ,GAEPmL,EAAgBzL,MAAQA,KAAKyL,cAAiB,SAAUjB,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIkB,EAAS,GACb,GAAW,MAAPlB,EAAa,IAAK,IAAIhK,KAAKgK,EAAS9K,OAAO0L,eAAeO,KAAKnB,EAAKhK,KAAIkL,EAAOlL,GAAKgK,EAAIhK,IAE5F,OADAkL,EAAM,QAAclB,EACbkB,GAEXhM,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAI+L,EAAQH,EAAa5K,EAAQ,IAC7BgK,EAAUhK,EAAQ,KAClBC,EAAUD,EAAQ,KAClBgL,EAAgB,CAAC,aAAc,UAAW,IAAK,UAC/CC,EAAgB,CAAC,YAAa,YAAa,IAAK,YAChDnB,EAAuB,SAAUoB,GAEjC,SAASpB,EAAMqB,GACX,IAAIC,EAAQF,EAAOJ,KAAK3L,KAAMgM,IAAUhM,KACxCiM,EAAMC,SAAWN,EAAMO,YACvBF,EAAMG,UAAY,GAClBH,EAAMI,SAAW,GACjBJ,EAAMK,MAAQ,CACVC,gBAAiB,EAAE,GAAI,GACvBC,mBAAoB,EACpBC,cAAe,IAAIlM,MAAM0L,EAAMD,MAAMtJ,OAAOrC,QAAQqM,KAAK,GAAGjG,KAAI,SAAUkG,EAAGzM,GAAK,OAAOA,KACzF0M,WAAW,EACXC,YAAa,IAEjBZ,EAAM/C,WAAa,WACf,IAAIlD,EAAKiG,EAAMD,MAAOhL,EAAYgF,EAAGhF,UAAW0B,EAASsD,EAAGtD,OAAQP,EAAM6D,EAAG7D,IAAKC,EAAM4D,EAAG5D,IACvF0K,EAAeb,EAAMC,SAASa,QAC9BC,EAAYF,EAAapF,wBACzBuF,EAAepC,EAAQvG,oBAAoBwI,GAC/C,OAAOb,EAAMlD,YAAYtC,KAAI,SAAUwD,EAAOzH,GAC1C,IAAI0K,EAAe,CAAE7L,EAAG,EAAGC,EAAG,GAC1B6L,EAAYlD,EAAMvC,wBAClB0F,EAAevC,EAAQ9G,UAAUkG,GACrC,OAAQjJ,GACJ,KAAKF,EAAQhB,UAAUqG,MAOnB,OANA+G,EAAa7L,GAA+C,GAA1C+L,EAAahJ,KAAO6I,EAAa7I,MACnD8I,EAAa5L,GACyD,IAAhE6L,EAAU7E,OAAS0E,EAAU1E,QAAU,EAAI2E,EAAa/I,KAC9DgJ,EAAa7L,GACT2L,EAAUzF,MAAQsD,EAAQrH,cAAcd,EAAOF,GAAQL,EAAKC,GACxD+K,EAAU5F,MAAQ,EACnB2F,EACX,KAAKpM,EAAQhB,UAAUuG,KAQnB,OAPA6G,EAAa7L,GAAiD,GAA5C+L,EAAa/I,MAAQ4I,EAAa5I,OACpD6I,EAAa5L,GACyD,IAAhE6L,EAAU7E,OAAS0E,EAAU1E,QAAU,EAAI2E,EAAa/I,KAC9DgJ,EAAa7L,GACT2L,EAAUzF,MACNyF,EAAUzF,MAAQsD,EAAQrH,cAAcd,EAAOF,GAAQL,EAAKC,GAC5D+K,EAAU5F,MAAQ,EACnB2F,EACX,KAAKpM,EAAQhB,UAAUmB,GAWnB,OAVAiM,EAAa7L,GAIJ,IAHH8L,EAAU5F,MAAQyF,EAAUzF,OAAS,EACnC6F,EAAahJ,KACb6I,EAAa7I,MAErB8I,EAAa5L,GAAK2L,EAAa7I,KAC/B8I,EAAa5L,GACT0L,EAAU1E,OACN0E,EAAU1E,OAASuC,EAAQrH,cAAcd,EAAOF,GAAQL,EAAKC,GAC7D+K,EAAU7E,OAAS,EACpB4E,EACX,KAAKpM,EAAQhB,UAAUoB,KAUnB,OATAgM,EAAa7L,GAIJ,IAHH8L,EAAU5F,MAAQyF,EAAUzF,OAAS,EACnC6F,EAAahJ,KACb6I,EAAa7I,MAErB8I,EAAa5L,GAAK2L,EAAa7I,KAC/B8I,EAAa5L,GACT0L,EAAU1E,OAASuC,EAAQrH,cAAcd,EAAOF,GAAQL,EAAKC,GACzD+K,EAAU7E,OAAS,EACpB4E,EACX,QACI,OAAOrC,EAAQ/D,kBAAkB9F,QAIjDiL,EAAMlD,UAAY,WACd,OAAIkD,EAAMC,UAAYD,EAAMC,SAASa,QAC1BxM,MAAM8G,KAAK4E,EAAMC,SAASa,QAAQzF,UAAU+F,QAAO,SAAU7F,GAChE,OAAOA,EAAG8F,aAAa,qBAG/BC,QAAQC,KAAK,6GACN,KAEXvB,EAAMwB,eAAiB,SAAUC,GAC7B,OAAOzB,EAAMlD,YAAY4E,WAAU,SAAUC,GAAS,OAAOA,IAAUF,EAAEG,QAAUD,EAAME,SAASJ,EAAEG,YAExG5B,EAAM8B,eAAiB,SAAUL,GAC7BxF,SAAS8F,iBAAiB,YAAa/B,EAAMgC,gBAAiB,CAC1DC,SAAS,IAEbhG,SAAS8F,iBAAiB,WAAY/B,EAAMkC,UAAW,CACnDD,SAAS,IAEbhG,SAAS8F,iBAAiB,cAAe/B,EAAMkC,UAAW,CACtDD,SAAS,KAGjBjC,EAAMmC,eAAiB,SAAUV,GAC7BxF,SAAS8F,iBAAiB,YAAa/B,EAAMoC,iBAC7CnG,SAAS8F,iBAAiB,UAAW/B,EAAMkC,YAE/ClC,EAAMqC,iBAAmB,SAAUZ,GAC/B,IAAI1H,EACJ,GAAiB,IAAb0H,EAAEa,OAKN,GAHAb,EAAEc,UACFd,EAAEe,iBACFxC,EAAMmC,eAAeV,EAAEgB,aACnBzC,EAAMD,MAAMtJ,OAAOrC,OAAS,GAAK4L,EAAMD,MAAM2C,eAAgB,CAC7D,GAAI1C,EAAMG,UAAUwC,MAAK,SAAUC,GAAY,IAAI7I,EAAI,OAAmC,QAA3BA,EAAK6I,EAAS9B,eAA4B,IAAP/G,OAAgB,EAASA,EAAG8H,SAASJ,EAAEG,WACrI,OAEJ5B,EAAM6C,SAAS,CACXvC,gBAAiB,CAACmB,EAAE3I,QAAS2I,EAAE1I,WAChC,WAAc,OAAOiH,EAAM8C,OAAOrB,EAAE3I,QAAS2I,EAAE1I,gBAEjD,CAED,IAAIwH,EAAoB3B,EAAQhG,qBAAqBoH,EAAMG,UAAU3F,KAAI,SAAUkG,GAAK,OAAOA,EAAEI,WAAaW,EAAE3I,QAAS2I,EAAE1I,QAASiH,EAAMD,MAAMhL,WAE1F,QAArDgF,EAAKiG,EAAMG,UAAUI,GAAmBO,eAA4B,IAAP/G,GAAyBA,EAAGgJ,QAC1F/C,EAAM6C,SAAS,CACXtC,kBAAmBA,IACpB,WAAc,OAAOP,EAAM8C,OAAOrB,EAAE3I,QAAS2I,EAAE1I,cAG1DiH,EAAMgD,SAAW,WACbpE,EAAQtG,gBAAgB0H,EAAMlD,YAAakD,EAAM/C,aAAc+C,EAAMD,MAAMtH,KAC3EuH,EAAMiD,wBAEVjD,EAAMkD,kBAAoB,SAAUzB,GAChC,IAAI1H,EAGJ,GAFA0H,EAAEc,UACFvC,EAAM8B,eAAeL,EAAEgB,aACnBzC,EAAMD,MAAMtJ,OAAOrC,OAAS,GAAK4L,EAAMD,MAAM2C,eAAgB,CAC7D,GAAI1C,EAAMG,UAAUwC,MAAK,SAAUC,GAAY,IAAI7I,EAAI,OAAmC,QAA3BA,EAAK6I,EAAS9B,eAA4B,IAAP/G,OAAgB,EAASA,EAAG8H,SAASJ,EAAEG,WACrI,OAEJ5B,EAAM6C,SAAS,CACXvC,gBAAiB,CAACmB,EAAE1L,QAAQ,GAAG+C,QAAS2I,EAAE1L,QAAQ,GAAGgD,WACtD,WAAc,OAAOiH,EAAM8C,OAAOrB,EAAE1L,QAAQ,GAAG+C,QAAS2I,EAAE1L,QAAQ,GAAGgD,gBAEvE,CAED,IAAIwH,EAAoB3B,EAAQhG,qBAAqBoH,EAAMG,UAAU3F,KAAI,SAAUkG,GAAK,OAAOA,EAAEI,WAAaW,EAAE1L,QAAQ,GAAG+C,QAAS2I,EAAE1L,QAAQ,GAAGgD,QAASiH,EAAMD,MAAMhL,WAEhH,QAArDgF,EAAKiG,EAAMG,UAAUI,GAAmBO,eAA4B,IAAP/G,GAAyBA,EAAGgJ,QAC1F/C,EAAM6C,SAAS,CACXtC,kBAAmBA,IACpB,WAAc,OAAOP,EAAM8C,OAAOrB,EAAE1L,QAAQ,GAAG+C,QAAS2I,EAAE1L,QAAQ,GAAGgD,cAGhFiH,EAAMmD,oBAAsB,SAAU1B,GAClC,IAAIzB,EAAMD,MAAMqD,SAAhB,CAEA,IAAIC,EAAUzE,EAAQ/I,aAAa4L,GACnC,GAAK4B,GAAwB,IAAb5B,EAAEa,OAAlB,CAEA,IAAI/L,EAAQyJ,EAAMwB,eAAeC,IAClB,IAAXlL,IAEA8M,EACArD,EAAM8B,eAAeL,GAGrBzB,EAAMmC,eAAeV,GAEzBzB,EAAM6C,SAAS,CACXtC,kBAAmBhK,EACnBiK,cAAeR,EAAMK,MAAMG,cAAchG,KAAI,SAAUkG,EAAGzM,GACtD,OAAIA,IAAMsC,EACCI,KAAKR,IAAIwD,MAAMhD,KAAMqJ,EAAMK,MAAMG,eAErCE,GAAKV,EAAMK,MAAMG,cAAcjK,GAASmK,EAAIA,EAAI,WAInEV,EAAMsD,YAAc,SAAU7B,GAC1BA,EAAEe,iBACFxC,EAAM8C,OAAOrB,EAAE3I,QAAS2I,EAAE1I,UAE9BiH,EAAMuD,YAAc,SAAU9B,GAC1BA,EAAEe,iBACFxC,EAAM8C,OAAOrB,EAAE1L,QAAQ,GAAG+C,QAAS2I,EAAE1L,QAAQ,GAAGgD,UAEpDiH,EAAMwD,UAAY,SAAU/B,GACxB,IAAI1H,EAAKiG,EAAMD,MAAOtJ,EAASsD,EAAGtD,OAAQgN,EAAW1J,EAAG0J,SAAUhO,EAAOsE,EAAGtE,KAAMgD,EAAMsB,EAAGtB,IACvFkI,EAAYX,EAAMK,MAAMM,UACxBpK,EAAQyJ,EAAMwB,eAAeC,EAAEgB,aAC/B/J,EAAWD,GAAO,EAAI,GACX,IAAXlC,IAEAqJ,EAAcjE,SAAS8F,EAAEiC,MACzBjC,EAAEe,iBACFxC,EAAM6C,SAAS,CACXtC,kBAAmBhK,EACnBoK,WAAW,IAEf8C,EAAS7E,EAAQhF,UAAUnD,EAAQF,EAAOyJ,EAAM1J,eAAeG,EAAOF,GAASmC,GAAsB,WAAV+I,EAAEiC,IAA0B,GAAPjO,EAAYA,GAAOc,MAE9HsJ,EAAclE,SAAS8F,EAAEiC,MAC9BjC,EAAEe,iBACFxC,EAAM6C,SAAS,CACXtC,kBAAmBhK,EACnBoK,WAAW,IAEf8C,EAAS7E,EAAQhF,UAAUnD,EAAQF,EAAOyJ,EAAM1J,eAAeG,EAAOF,GAClEmC,GAAsB,aAAV+I,EAAEiC,IAA4B,GAAPjO,EAAYA,GAAOc,MAE3C,QAAVkL,EAAEiC,IACP1D,EAAM6C,SAAS,CAAEtC,mBAAoB,IAAK,WAElCI,GACAX,EAAM2D,uBAKVhD,GACAX,EAAM2D,sBAIlB3D,EAAM4D,QAAU,SAAUnC,GACtB,IAAId,EAAYX,EAAMK,MAAMM,UAC5BX,EAAM6C,SAAS,CACXtC,mBAAoB,IACrB,WACKI,GACAX,EAAM2D,wBAIlB3D,EAAM8C,OAAS,SAAUhK,EAASC,GAC9B,IAAIgB,EAAKiG,EAAMK,MAAOE,EAAoBxG,EAAGwG,kBAAmBD,EAAkBvG,EAAGuG,gBACjFrG,EAAK+F,EAAMD,MAAOhL,EAAYkF,EAAGlF,UAAWmB,EAAM+D,EAAG/D,IAAKC,EAAM8D,EAAG9D,IAAKsN,EAAWxJ,EAAGwJ,SAAUhN,EAASwD,EAAGxD,OAAQhB,EAAOwE,EAAGxE,KAAMgD,EAAMwB,EAAGxB,IACjJ,IAA2B,IAAvB8H,IAAoD,IAAxBD,EAAgB,KAAqC,IAAxBA,EAAgB,GACzE,OAAO,KACX,IACIS,EADef,EAAMC,SAASa,QACLrF,wBACzBoI,EAAcjF,EAAQ9J,WAAWC,GAC/BgM,EAAU1E,OACV0E,EAAUzF,MAChB,IAA4B,IAAxBgF,EAAgB,KAAqC,IAAxBA,EAAgB,GAAW,CAExD,IAAIwD,EAAKhL,EAAUwH,EAAgB,GAC/ByD,EAAKhL,EAAUuH,EAAgB,GAE/B0D,EAAa,EACjB,OAAQjP,GACJ,KAAKF,EAAQhB,UAAUqG,MACvB,KAAKrF,EAAQhB,UAAUuG,KACnB4J,EAAcF,EAAKD,GAAgB1N,EAAMD,GAAOA,EAChD,MACJ,KAAKrB,EAAQhB,UAAUoB,KACvB,KAAKJ,EAAQhB,UAAUmB,GACnBgP,EAAcD,EAAKF,GAAgB1N,EAAMD,GAAOA,EAChD,MACJ,QACI0I,EAAQ/D,kBAAkB9F,GAMlC,GAHI0D,IACAuL,IAAe,GAEfrN,KAAKO,IAAI8M,IAAevO,EAAO,EAAG,CAElC,IAAK,IAAIxB,EAAI,EAAGA,EAAI+L,EAAMG,UAAU/L,OAAQH,IAAK,CAC7C,GAAKwC,EAAOxC,KAAOkC,GAAiC,IAA1BQ,KAAKsN,KAAKD,IAAuBvN,EAAOxC,KAAOiC,IAAkC,IAA3BS,KAAKsN,KAAKD,GACtF,OACJ,IAAIE,EAAazN,EAAOxC,GAAK+P,EACzBE,EAAa/N,EACb6N,EAAa7N,EAAMM,EAAOxC,GACrBiQ,EAAahO,IAClB8N,EAAa9N,EAAMO,EAAOxC,IAGlC,IAAIkQ,EAAY1N,EAAOkB,MAAM,GAC7B,IAAS1D,EAAI,EAAGA,EAAI+L,EAAMG,UAAU/L,OAAQH,IACxCkQ,EAAYvF,EAAQhF,UAAUuK,EAAWlQ,EAAG+L,EAAM1J,eAAeG,EAAOxC,GAAK+P,EAAY/P,IAE7F+L,EAAM6C,SAAS,CACXvC,gBAAiB,CAACxH,EAASC,KAE/B0K,EAASU,QAGZ,CACD,IAAIC,EAAW,EACf,OAAQrP,GACJ,KAAKF,EAAQhB,UAAUqG,MACnBkK,GACMtL,EAAUiI,EAAU5I,MAAQ0L,GAAgB1N,EAAMD,GAAOA,EAC/D,MACJ,KAAKrB,EAAQhB,UAAUuG,KACnBgK,GACMP,GAAe/K,EAAUiI,EAAU5I,OAAS0L,GACzC1N,EAAMD,GACPA,EACR,MACJ,KAAKrB,EAAQhB,UAAUoB,KACnBmP,GACMrL,EAAUgI,EAAU9I,KAAO4L,GAAgB1N,EAAMD,GAAOA,EAC9D,MACJ,KAAKrB,EAAQhB,UAAUmB,GACnBoP,GACMP,GAAe9K,EAAUgI,EAAU9I,MAAQ4L,GACxC1N,EAAMD,GACPA,EACR,MACJ,QACI0I,EAAQ/D,kBAAkB9F,GAG9B0D,IACA2L,EAAWjO,EAAMD,EAAMkO,GAEvBzN,KAAKO,IAAIT,EAAO8J,GAAqB6D,IAAa3O,EAAO,GACzDgO,EAAS7E,EAAQhF,UAAUnD,EAAQ8J,EAAmBP,EAAM1J,eAAe8N,EAAU7D,OAIjGP,EAAM1J,eAAiB,SAAU1C,EAAO2C,GACpC,IAAIwD,EAAKiG,EAAMD,MAAO7J,EAAM6D,EAAG7D,IAAKC,EAAM4D,EAAG5D,IAAKV,EAAOsE,EAAGtE,KAAMe,EAAeuD,EAAGvD,aAAcC,EAASsD,EAAGtD,OAC9G,OAAOmI,EAAQtI,eAAe1C,EAAO2C,EAAOL,EAAKC,EAAKV,EAAMe,EAAcC,IAE9EuJ,EAAMqE,MAAQ,SAAU5C,GAOpB,GANAA,EAAEe,iBACFvG,SAASqI,oBAAoB,YAAatE,EAAMoC,iBAChDnG,SAASqI,oBAAoB,YAAatE,EAAMgC,iBAChD/F,SAASqI,oBAAoB,UAAWtE,EAAMkC,WAC9CjG,SAASqI,oBAAoB,WAAYtE,EAAMkC,WAC/CjG,SAASqI,oBAAoB,cAAetE,EAAMkC,YACX,IAAnClC,EAAMK,MAAME,oBAAgE,IAApCP,EAAMK,MAAMC,gBAAgB,KAAiD,IAApCN,EAAMK,MAAMC,gBAAgB,GAC7G,OAAO,KACXN,EAAM6C,SAAS,CAAEtC,mBAAoB,EAAGD,gBAAiB,EAAE,GAAI,KAAM,WACjEN,EAAM2D,wBAGd3D,EAAM2D,kBAAoB,WACtB3D,EAAM6C,SAAS,CAAElC,WAAW,IAC5B,IAAI5G,EAAKiG,EAAMD,MAAOwE,EAAgBxK,EAAGwK,cAAe9N,EAASsD,EAAGtD,OAChE8N,GACAA,EAAc9N,IAGtBuJ,EAAMiD,qBAAuB,WACzB,GAAKjD,EAAMD,MAAMyE,YACZxE,EAAMC,UACoB,OAA3BD,EAAMC,SAASa,QAFnB,CAUA,IANA,IAAI2D,EAAW1M,OAAOC,iBAAiBgI,EAAMC,SAASa,SAClD4D,EAAarO,SAASoO,EAASnJ,MAAO,IACtCqJ,EAActO,SAASoO,EAASpI,OAAQ,IACxCuI,EAAcvO,SAASoO,EAASG,YAAa,IAC7CC,EAAaxO,SAASoO,EAASI,WAAY,IAC3CzO,EAAM,GACDnC,EAAI,EAAGA,EAAI+L,EAAM8E,WAAa,EAAG7Q,IAAK,CAC3C,IAAI8Q,EAAa,KACbC,EAAY,KAChB,GAAIhF,EAAMI,SAASnM,GAAG6M,QAAS,CAC3B,IAAImE,EAAWjF,EAAMI,SAASnM,GAAG6M,QAAQrF,wBACzCsJ,EAAaE,EAAS5I,OACtB2I,EAAYC,EAAS3J,MAErB0E,EAAMD,MAAMhL,YAAcF,EAAQhB,UAAUuG,MAC5C4F,EAAMD,MAAMhL,YAAcF,EAAQhB,UAAUqG,MAC5C9D,EAAIqH,KAAK,CACL9G,KAAKC,MAAO8N,EAAa1E,EAAM8E,WAAc7Q,EAAI2Q,EAAcI,EAAY,IAC1ErO,KAAKC,OAAOmO,EAAaJ,GAAe,KAI7CvO,EAAIqH,KAAK,CACL9G,KAAKC,MAAO+N,EAAc3E,EAAM8E,WAAc7Q,EAAI4Q,EAAaE,EAAa,IAC3EpO,KAAKC,OAAOoO,EAAYN,GAAc,KAInD1E,EAAM6C,SAAS,CAAEjC,YAAaxK,MAElC4J,EAAM8E,YAAc/E,EAAM5J,IAAM4J,EAAM7J,KAAO8J,EAAMD,MAAMtK,KACzDuK,EAAMoC,gBAAkBxD,EAAQxF,KAAK4G,EAAMsD,aAC3CtD,EAAMgC,gBAAkBpD,EAAQxF,KAAK4G,EAAMuD,aAC3CvD,EAAMkC,UAAYtD,EAAQxF,KAAK4G,EAAMqE,OACrCrE,EAAMkF,aAAetG,EAAQxF,KAAK4G,EAAMgD,UACxChD,EAAMG,UAAYJ,EAAMtJ,OAAO+D,KAAI,WAAc,OAAOmF,EAAMO,eAC9D,IAAK,IAAIjM,EAAI,EAAGA,EAAI+L,EAAM8E,WAAa,EAAG7Q,IACtC+L,EAAMI,SAASnM,GAAK0L,EAAMO,YAK9B,GAHKtB,EAAQ3I,gBAAgB8J,EAAM7J,IAAK6J,EAAM5J,IAAK4J,EAAMtK,OACrD6L,QAAQC,KAAK,iEAEE,IAAfxB,EAAMtK,KACN,MAAM,IAAIqF,MAAM,+CAEpB,OAAOkF,EAoIX,OA1gBAnB,EAAUH,EAAOoB,GAwYjBpB,EAAMY,UAAU6F,kBAAoB,WAChC,IAAInF,EAAQjM,KACRgG,EAAKhG,KAAKgM,MAAOtJ,EAASsD,EAAGtD,OAAQP,EAAM6D,EAAG7D,IAAKT,EAAOsE,EAAGtE,KACjE1B,KAAKqR,eAAiBrN,OAAOsN,eACvB,IAAItN,OAAOsN,eAAetR,KAAKmR,cAC/B,CACEI,QAAS,WAAc,OAAOvN,OAAOgK,iBAAiB,SAAU/B,EAAMkF,eACtEK,UAAW,WACP,OAAOxN,OAAOuM,oBAAoB,SAAUtE,EAAMkF,gBAG9DjJ,SAAS8F,iBAAiB,aAAchO,KAAKoP,oBAAqB,CAC9DlB,SAAS,IAEbhG,SAAS8F,iBAAiB,YAAahO,KAAKoP,oBAAqB,CAC7DlB,SAAS,KAEZlO,KAAKgM,MAAMvJ,cAAgBoI,EAAQlH,oBAAoB3D,KAAKgM,MAAMtJ,QACnE1C,KAAKgM,MAAMtJ,OAAOkC,SAAQ,SAAU/E,GAChC,OAAOgL,EAAQpH,gBAAgB5D,EAAOoM,EAAMD,MAAM7J,IAAK8J,EAAMD,MAAM5J,QAEvEpC,KAAKqR,eAAeE,QAAQvR,KAAKkM,SAASa,SAC1ClC,EAAQtG,gBAAgBvE,KAAK+I,YAAa/I,KAAKkJ,aAAclJ,KAAKgM,MAAMtH,KACxE1E,KAAKkP,uBACLxM,EAAOkC,SAAQ,SAAU/E,GAChBgL,EAAQ3I,gBAAgBC,EAAKtC,EAAO6B,IACrC6L,QAAQC,KAAK,6KAIzB7C,EAAMY,UAAUkG,mBAAqB,SAAUC,GAC3C7G,EAAQtG,gBAAgBvE,KAAK+I,YAAa/I,KAAKkJ,aAAclJ,KAAKgM,MAAMtH,MAE5EiG,EAAMY,UAAUoG,qBAAuB,WAInCzJ,SAASqI,oBAAoB,YAAavQ,KAAKoP,oBAHjC,CACVlB,SAAS,IAGbhG,SAASqI,oBAAoB,aAAcvQ,KAAKoP,qBAChDlH,SAASqI,oBAAoB,WAAYvQ,KAAKmO,WAC9CnO,KAAKqR,eAAeG,UAAUxR,KAAKkM,SAASa,UAEhDpC,EAAMY,UAAUqG,OAAS,WACrB,IAAI3F,EAAQjM,KACRgG,EAAKhG,KAAKgM,MAAO6F,EAAc7L,EAAG6L,YAAaC,EAAc9L,EAAG8L,YAAa5L,EAAKF,EAAGyK,WAAYA,OAAoB,IAAPvK,EAAgB,WAAc,OAAO,MAAUA,EAAIxD,EAASsD,EAAGtD,OAAQP,EAAM6D,EAAG7D,IAAKC,EAAM4D,EAAG5D,IAAKK,EAAeuD,EAAGvD,aAAc4M,EAAWrJ,EAAGqJ,SAC/PjJ,EAAKpG,KAAKsM,MAAOE,EAAoBpG,EAAGoG,kBAAmBC,EAAgBrG,EAAGqG,cAAeI,EAAczG,EAAGyG,YAClH,OAAOgF,EAAY,CACf7F,MAAO,CACHzK,MAAO,CAGHC,UAAW,WACXuQ,OAAQvF,GAAqB,EACvB,WACAxM,KAAKgM,MAAM2C,eACP9D,EAAQ9J,WAAWf,KAAKgM,MAAMhL,WAC1B,YACA,YACc,IAAlB0B,EAAOrC,QAAiBgP,EAEpB,UADA,WAGlB2C,YAAa3C,EAAWxE,EAAQhE,OAAS7G,KAAKsO,iBAC9C2D,aAAc5C,EAAWxE,EAAQhE,OAAS7G,KAAKmP,kBAC/C+C,IAAKlS,KAAKkM,UAEdiG,UAAWnS,KAAKsM,MAAME,mBAAqB,EAC3C6C,SAAUA,EACV/H,SAAUvH,EAAe8M,EAAYpG,KAAI,SAAU2L,EAAQ5P,GACvD,OAAOiO,EAAW,CACdzE,MAAO,CACHzK,MAAO0K,EAAMD,MAAMhL,YAAcF,EAAQhB,UAAUuG,MAC/C4F,EAAMD,MAAMhL,YAAcF,EAAQhB,UAAUqG,MAC1C,CACEkM,SAAU,WACVjO,KAAMgO,EAAO,GAAK,KAClBE,UAAWF,EAAO,GAAK,MAEzB,CACEC,SAAU,WACVnO,IAAKkO,EAAO,GAAK,KACjBG,WAAYH,EAAO,GAAK,MAEhCzC,IAAK,OAASnN,EACd0P,IAAKjG,EAAMI,SAAS7J,IAExBA,MAAOA,OAEXE,EAAO+D,KAAI,SAAU5G,EAAO2C,GAC5B,IAAI2P,EAAYlG,EAAMK,MAAME,oBAAsBhK,EAClD,OAAOsP,EAAY,CACftP,MAAOA,EACP3C,MAAOA,EACPsS,UAAWA,EACXnG,MAAO,CACHzK,MAAO,CACH8Q,SAAU,WACVG,OAAQ/F,EAAcjK,GACtBuP,OAAQ1C,EAAW,UAAY8C,EAAY,WAAa,OACxDM,WAAY,OACZC,YAAa,OACbC,iBAAkB,OAClBC,cAAe,OACfC,aAAc,QAElBlD,IAAKnN,EACLsQ,SAAUzD,OAAW0D,EAAY,EACjC,gBAAiBtQ,EAAeL,EAAMM,EAAOF,EAAQ,IAAMJ,EAC3D,gBAAiBK,EAAeN,EAAMO,EAAOF,EAAQ,IAAML,EAC3D,gBAAiBtC,EACjBmT,WAAW,EACXd,IAAKjG,EAAMG,UAAU5J,GACrByQ,KAAM,SACNxD,UAAWJ,EAAWxE,EAAQhE,OAASoF,EAAMwD,UAC7CI,QAASR,EAAWxE,EAAQhE,OAASoF,EAAM4D,kBAM/DlF,EAAMuI,aAAe,CACjBxR,KAAM,EACNV,UAAWF,EAAQhB,UAAUqG,MAC7BzB,KAAK,EACL2K,UAAU,EACV5M,cAAc,EACdkM,gBAAgB,EAChBxM,IAAK,EACLC,IAAK,KAEFuI,EA3gBgB,CA4gBzBiB,EAAMuH,WACRvT,EAAQgL,QAAUD","file":"static/js/20.c9cd031c.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[\"Right\"] = \"to right\";\n    Direction[\"Left\"] = \"to left\";\n    Direction[\"Down\"] = \"to bottom\";\n    Direction[\"Up\"] = \"to top\";\n})(Direction = exports.Direction || (exports.Direction = {}));\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar types_1 = require(\"./types\");\nexports.getStepDecimals = function (step) {\n    var decimals = step.toString().split('.')[1];\n    return decimals ? decimals.length : 0;\n};\nfunction isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexports.isTouchEvent = isTouchEvent;\nfunction isStepDivisible(min, max, step) {\n    var res = (max - min) / step;\n    return parseInt(res.toString(), 10) === res;\n}\nexports.isStepDivisible = isStepDivisible;\nfunction normalizeValue(value, index, min, max, step, allowOverlap, values) {\n    var BIG_NUM = 10e10;\n    value = Math.round(value * BIG_NUM) / BIG_NUM;\n    if (!allowOverlap) {\n        var prev = values[index - 1];\n        var next = values[index + 1];\n        if (prev && prev > value)\n            return prev;\n        if (next && next < value)\n            return next;\n    }\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    // `remainder` is a difference between the given value and a full step value\n    // that is closest lower to the given value and is in the range between the min value\n    // and the given value\n    var remainder = Math.floor(value * BIG_NUM - min * BIG_NUM) %\n        Math.floor(step * BIG_NUM);\n    var closestLowerNum = Math.floor(value * BIG_NUM - Math.abs(remainder));\n    var rounded = remainder === 0 ? value : closestLowerNum / BIG_NUM;\n    // Values with a remainder `< step/2` are rounded to the closest lower value\n    // while values with a remainder `= > step/2` are rounded to the closest bigger value\n    var res = Math.abs(remainder / BIG_NUM) < step / 2\n        ? rounded\n        : rounded + step;\n    var decimalPlaces = exports.getStepDecimals(step);\n    return parseFloat(res.toFixed(decimalPlaces));\n}\nexports.normalizeValue = normalizeValue;\nfunction relativeValue(value, min, max) {\n    return (value - min) / (max - min);\n}\nexports.relativeValue = relativeValue;\nfunction isVertical(direction) {\n    return direction === types_1.Direction.Up || direction === types_1.Direction.Down;\n}\nexports.isVertical = isVertical;\nfunction checkBoundaries(value, min, max) {\n    if (min >= max) {\n        throw new RangeError(\"min (\" + min + \") is equal/bigger than max (\" + max + \")\");\n    }\n    if (value < min) {\n        throw new RangeError(\"value (\" + value + \") is smaller than min (\" + min + \")\");\n    }\n    if (value > max) {\n        throw new RangeError(\"value (\" + value + \") is bigger than max (\" + max + \")\");\n    }\n}\nexports.checkBoundaries = checkBoundaries;\nfunction checkInitialOverlap(values) {\n    if (values.length < 2)\n        return;\n    if (!values.slice(1).every(function (item, i) { return values[i] <= item; })) {\n        throw new RangeError(\"values={[\" + values + \"]} needs to be sorted when allowOverlap={false}\");\n    }\n}\nexports.checkInitialOverlap = checkInitialOverlap;\nfunction getMargin(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['margin-top'], 10),\n        bottom: parseInt(style['margin-bottom'], 10),\n        left: parseInt(style['margin-left'], 10),\n        right: parseInt(style['margin-right'], 10)\n    };\n}\nexports.getMargin = getMargin;\nfunction getPaddingAndBorder(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['padding-top'], 10) + parseInt(style['border-top-width'], 10),\n        bottom: parseInt(style['padding-bottom'], 10) + parseInt(style['border-bottom-width'], 10),\n        left: parseInt(style['padding-left'], 10) + parseInt(style['border-left-width'], 10),\n        right: parseInt(style['padding-right'], 10) + parseInt(style['border-right-width'], 10),\n    };\n}\nexports.getPaddingAndBorder = getPaddingAndBorder;\nfunction translateThumbs(elements, offsets, rtl) {\n    var inverter = rtl ? -1 : 1;\n    elements.forEach(function (element, index) {\n        return translate(element, inverter * offsets[index].x, offsets[index].y);\n    });\n}\nexports.translateThumbs = translateThumbs;\n/**\n * Util function for calculating the index of the thumb that is closes to a given position\n * @param thumbs - array of Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getClosestThumbIndex(thumbs, clientX, clientY, direction) {\n    var thumbIndex = 0;\n    var minThumbDistance = getThumbDistance(thumbs[0], clientX, clientY, direction);\n    for (var i = 1; i < thumbs.length; i++) {\n        var thumbDistance = getThumbDistance(thumbs[i], clientX, clientY, direction);\n        if (thumbDistance < minThumbDistance) {\n            minThumbDistance = thumbDistance;\n            thumbIndex = i;\n        }\n    }\n    return thumbIndex;\n}\nexports.getClosestThumbIndex = getClosestThumbIndex;\nfunction translate(element, x, y) {\n    element.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n}\nexports.translate = translate;\n// adapted from https://github.com/alexreardon/raf-schd\nexports.schd = function (fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function () {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    return wrapperFn;\n};\nfunction replaceAt(values, index, value) {\n    var ret = values.slice(0);\n    ret[index] = value;\n    return ret;\n}\nexports.replaceAt = replaceAt;\nfunction getTrackBackground(_a) {\n    var values = _a.values, colors = _a.colors, min = _a.min, max = _a.max, _b = _a.direction, direction = _b === void 0 ? types_1.Direction.Right : _b, _c = _a.rtl, rtl = _c === void 0 ? false : _c;\n    if (rtl && direction === types_1.Direction.Right) {\n        direction = types_1.Direction.Left;\n    }\n    else if (rtl && types_1.Direction.Left) {\n        direction = types_1.Direction.Right;\n    }\n    // sort values ascending\n    var progress = values.slice(0).sort(function (a, b) { return a - b; }).map(function (value) { return ((value - min) / (max - min)) * 100; });\n    var middle = progress.reduce(function (acc, point, index) {\n        return acc + \", \" + colors[index] + \" \" + point + \"%, \" + colors[index + 1] + \" \" + point + \"%\";\n    }, '');\n    return \"linear-gradient(\" + direction + \", \" + colors[0] + \" 0%\" + middle + \", \" + colors[colors.length - 1] + \" 100%)\";\n}\nexports.getTrackBackground = getTrackBackground;\nfunction voidFn() { }\nexports.voidFn = voidFn;\nfunction assertUnreachable(x) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\n/**\n * Util function for grabbing the true largest width of a thumb\n * including the label\n * @param thumbEl - Thumb element to grab the largest width from\n * @param value - Thumb value, not label value\n * @param separator - Label separator value\n */\nvar getThumbWidth = function (thumbEl, value, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var width = Math.ceil(__spreadArrays([thumbEl], Array.from(thumbEl.children)).reduce(function (width, el) {\n        var elWidth = Math.ceil(el.getBoundingClientRect().width);\n        /**\n         * If a label contains a merged label value, it won't return the true\n         * label width for that Thumb. Clone the label and change the value\n         * to that individual Thumb value in order to grab the true width.\n         */\n        if (el.innerText &&\n            el.innerText.includes(separator) &&\n            el.childElementCount === 0) {\n            var elClone = el.cloneNode(true);\n            elClone.innerHTML = valueToLabel(value.toFixed(decimalPlaces));\n            elClone.style.visibility = 'hidden';\n            document.body.appendChild(elClone);\n            elWidth = Math.ceil(elClone.getBoundingClientRect().width);\n            document.body.removeChild(elClone);\n        }\n        return elWidth > width ? elWidth : width;\n    }, thumbEl.getBoundingClientRect().width));\n    return width;\n};\n/**\n * Bulk of logic for thumb overlaps\n * Consider a scenario with 5 thumbs;\n * Thumb 1 overlaps with thumb 0 and thumb 2\n * Thumb 2 overlaps with thumb 3\n * We need an array that contains [0, 1, 2, 3]\n * The function needs to return the directly overlapping thumbs\n * and all thumbs overlapping linked to those and so on\n * @param index - Thumb index calculating overlaps for\n * @param offsets - Current Array of Thumb offsets for Range\n * @param thumbs - Array of Thumb elements\n * @param values - Array of Thumb values\n * @param separator - String separator for merged label values\n * @returns overlaps - Array of all overlapping thumbs from the index\n */\nvar getOverlaps = function (index, offsets, thumbs, values, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var overlaps = [];\n    /**\n     * Recursive function for building the overlaps Array\n     * If an overlap is found, find the overlaps for that overlap\n     * @param thumbIndex current Thumb index to find overlaps from\n     */\n    var buildOverlaps = function (thumbIndex) {\n        var thumbXWidth = getThumbWidth(thumbs[thumbIndex], values[thumbIndex], separator, decimalPlaces, valueToLabel);\n        var thumbX = offsets[thumbIndex].x;\n        /**\n         * Iterate through the Thumb offsets, if there is a match\n         * add the thumbIndex and siblingIndex to the overlaps Array\n         *\n         * Then build overlaps from the overlapping siblingIndex\n         */\n        offsets.forEach(function (_a, siblingIndex) {\n            var siblingX = _a.x;\n            var siblingWidth = getThumbWidth(thumbs[siblingIndex], values[siblingIndex], separator, decimalPlaces, valueToLabel);\n            if (thumbIndex !== siblingIndex &&\n                ((thumbX >= siblingX && thumbX <= siblingX + siblingWidth) ||\n                    (thumbX + thumbXWidth >= siblingX &&\n                        thumbX + thumbXWidth <= siblingX + siblingWidth))) {\n                if (!overlaps.includes(siblingIndex)) {\n                    overlaps.push(thumbIndex);\n                    overlaps.push(siblingIndex);\n                    overlaps = __spreadArrays(overlaps, [thumbIndex, siblingIndex]);\n                    buildOverlaps(siblingIndex);\n                }\n            }\n        });\n    };\n    buildOverlaps(index);\n    // Sort and remove duplicates from the built overlaps\n    return Array.from(new Set(overlaps.sort()));\n};\n/**\n * A custom React Hook for calculating whether a thumb overlaps\n * another and whether labels could/should merge.\n * @param rangeRef - React ref value of Range component\n * @param values - current Range values Array\n * @param index - thumb index\n * @param step - step value, used to calculate the number of decimal places\n * @param separator - string to separate thumb values\n * @returns label value + styling for thumb label\n */\nexports.useThumbOverlap = function (rangeRef, values, index, step, separator, valueToLabel) {\n    if (step === void 0) { step = 0.1; }\n    if (separator === void 0) { separator = ' - '; }\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var decimalPlaces = exports.getStepDecimals(step);\n    // Create initial label style and value. Label value defaults to thumb value\n    var _a = react_1.useState({}), labelStyle = _a[0], setLabelStyle = _a[1];\n    var _b = react_1.useState(valueToLabel(values[index].toFixed(decimalPlaces))), labelValue = _b[0], setLabelValue = _b[1];\n    // When the rangeRef or values change, update the Thumb label values and styling\n    react_1.useEffect(function () {\n        if (rangeRef) {\n            var thumbs = rangeRef.getThumbs();\n            if (thumbs.length < 1)\n                return;\n            var newStyle = {};\n            var offsets_1 = rangeRef.getOffsets();\n            /**\n             * Get any overlaps for the given Thumb index. This must return all linked\n             * Thumbs. So if there are 4 Thumbs and Thumbs 2, 3 and 4 overlap. If we are\n             * getting the overlaps for Thumb 1 and it overlaps only Thumb 2, we must get\n             * 2, 3 and 4 also.\n             */\n            var overlaps = getOverlaps(index, offsets_1, thumbs, values, separator, decimalPlaces, valueToLabel);\n            // Set a default label value of the Thumb value\n            var labelValue_1 = valueToLabel(values[index].toFixed(decimalPlaces));\n            /**\n             * If there are overlaps for the Thumb, we need to calculate the correct\n             * Label value along with the relevant styling. We only want to show a Label\n             * for the left most Thumb in an overlapping set.\n             * All other Thumbs will be set to display: none.\n             */\n            if (overlaps.length) {\n                /**\n                 * Get an Array of the offsets for the overlapping Thumbs\n                 * This is so we can determine if the Thumb we are looking at\n                 * is the left most thumb in an overlapping set\n                 */\n                var offsetsX = overlaps.reduce(function (a, c, i, s) {\n                    return a.length ? __spreadArrays(a, [offsets_1[s[i]].x]) : [offsets_1[s[i]].x];\n                }, []);\n                /**\n                 * If our Thumb is the left most Thumb, we can build a Label value\n                 * and set the style for that Label\n                 */\n                if (Math.min.apply(Math, offsetsX) === offsets_1[index].x) {\n                    /**\n                     * First calculate the Label value. To do this,\n                     * grab all the values for the Thumbs in our overlaps.\n                     * Then convert that to a Set and sort it whilst removing duplicates.\n                     */\n                    var labelValues_1 = [];\n                    overlaps.forEach(function (thumb) {\n                        labelValues_1.push(values[thumb].toFixed(decimalPlaces));\n                    });\n                    /**\n                     *  Update the labelValue with the resulting Array\n                     *  joined by our defined separator\n                     */\n                    labelValue_1 = Array.from(new Set(labelValues_1.sort(function (a, b) { return parseFloat(a) - parseFloat(b); })))\n                        .map(valueToLabel)\n                        .join(separator);\n                    /**\n                     * Lastly, build the label styling. The label styling will\n                     * position the label and apply a transform so that it's centered.\n                     * We want the center point between the left edge of the left most Thumb\n                     * and the right edge of the right most Thumb.\n                     */\n                    var first = Math.min.apply(Math, offsetsX);\n                    var last = Math.max.apply(Math, offsetsX);\n                    var lastWidth = thumbs[overlaps[offsetsX.indexOf(last)]].getBoundingClientRect().width;\n                    newStyle.left = Math.abs(first - (last + lastWidth)) / 2 + \"px\";\n                    newStyle.transform = 'translate(-50%, 0)';\n                }\n                else {\n                    // If the Thumb isn't the left most Thumb, hide the Label!\n                    newStyle.visibility = 'hidden';\n                }\n            }\n            // Update the label value and style\n            setLabelValue(labelValue_1);\n            setLabelStyle(newStyle);\n        }\n    }, [rangeRef, values]);\n    return [labelValue, labelStyle];\n};\n/**\n * Util function for calculating the distance of the center of a thumb\n * form a given mouse/touch target's position\n * @param thumbEl - Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getThumbDistance(thumbEl, clientX, clientY, direction) {\n    var _a = thumbEl.getBoundingClientRect(), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n    return isVertical(direction) ? Math.abs(clientY - (y + height / 2)) : Math.abs(clientX - (x + width / 2));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Range_1 = __importDefault(require(\"./Range\"));\nexports.Range = Range_1.default;\nvar utils_1 = require(\"./utils\");\nexports.getTrackBackground = utils_1.getTrackBackground;\nexports.useThumbOverlap = utils_1.useThumbOverlap;\nexports.relativeValue = utils_1.relativeValue;\nvar types_1 = require(\"./types\");\nexports.Direction = types_1.Direction;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar utils_1 = require(\"./utils\");\nvar types_1 = require(\"./types\");\nvar INCREASE_KEYS = ['ArrowRight', 'ArrowUp', 'k', 'PageUp'];\nvar DECREASE_KEYS = ['ArrowLeft', 'ArrowDown', 'j', 'PageDown'];\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range(props) {\n        var _this = _super.call(this, props) || this;\n        _this.trackRef = React.createRef();\n        _this.thumbRefs = [];\n        _this.markRefs = [];\n        _this.state = {\n            draggedTrackPos: [-1, -1],\n            draggedThumbIndex: -1,\n            thumbZIndexes: new Array(_this.props.values.length).fill(0).map(function (t, i) { return i; }),\n            isChanged: false,\n            markOffsets: []\n        };\n        _this.getOffsets = function () {\n            var _a = _this.props, direction = _a.direction, values = _a.values, min = _a.min, max = _a.max;\n            var trackElement = _this.trackRef.current;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackPadding = utils_1.getPaddingAndBorder(trackElement);\n            return _this.getThumbs().map(function (thumb, index) {\n                var thumbOffsets = { x: 0, y: 0 };\n                var thumbRect = thumb.getBoundingClientRect();\n                var thumbMargins = utils_1.getMargin(thumb);\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        thumbOffsets.x = (thumbMargins.left + trackPadding.left) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Left:\n                        thumbOffsets.x = (thumbMargins.right + trackPadding.right) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width -\n                                trackRect.width * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Up:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height -\n                                trackRect.height * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Down:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height * utils_1.relativeValue(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    default:\n                        return utils_1.assertUnreachable(direction);\n                }\n            });\n        };\n        _this.getThumbs = function () {\n            if (_this.trackRef && _this.trackRef.current) {\n                return Array.from(_this.trackRef.current.children).filter(function (el) {\n                    return el.hasAttribute('aria-valuenow');\n                });\n            }\n            console.warn('No thumbs found in the track container. Did you forget to pass & spread the `props` param in renderTrack?');\n            return [];\n        };\n        _this.getTargetIndex = function (e) {\n            return _this.getThumbs().findIndex(function (child) { return child === e.target || child.contains(e.target); });\n        };\n        _this.addTouchEvents = function (e) {\n            document.addEventListener('touchmove', _this.schdOnTouchMove, {\n                passive: false\n            });\n            document.addEventListener('touchend', _this.schdOnEnd, {\n                passive: false\n            });\n            document.addEventListener('touchcancel', _this.schdOnEnd, {\n                passive: false\n            });\n        };\n        _this.addMouseEvents = function (e) {\n            document.addEventListener('mousemove', _this.schdOnMouseMove);\n            document.addEventListener('mouseup', _this.schdOnEnd);\n        };\n        _this.onMouseDownTrack = function (e) {\n            var _a;\n            if (e.button !== 0)\n                return;\n            e.persist();\n            e.preventDefault();\n            _this.addMouseEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.clientX, e.clientY]\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = utils_1.getClosestThumbIndex(_this.thumbRefs.map(function (t) { return t.current; }), e.clientX, e.clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n        };\n        _this.onResize = function () {\n            utils_1.translateThumbs(_this.getThumbs(), _this.getOffsets(), _this.props.rtl);\n            _this.calculateMarkOffsets();\n        };\n        _this.onTouchStartTrack = function (e) {\n            var _a;\n            e.persist();\n            _this.addTouchEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.touches[0].clientX, e.touches[0].clientY]\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = utils_1.getClosestThumbIndex(_this.thumbRefs.map(function (t) { return t.current; }), e.touches[0].clientX, e.touches[0].clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n        };\n        _this.onMouseOrTouchStart = function (e) {\n            if (_this.props.disabled)\n                return;\n            var isTouch = utils_1.isTouchEvent(e);\n            if (!isTouch && e.button !== 0)\n                return;\n            var index = _this.getTargetIndex(e);\n            if (index === -1)\n                return;\n            if (isTouch) {\n                _this.addTouchEvents(e);\n            }\n            else {\n                _this.addMouseEvents(e);\n            }\n            _this.setState({\n                draggedThumbIndex: index,\n                thumbZIndexes: _this.state.thumbZIndexes.map(function (t, i) {\n                    if (i === index) {\n                        return Math.max.apply(Math, _this.state.thumbZIndexes);\n                    }\n                    return t <= _this.state.thumbZIndexes[index] ? t : t - 1;\n                })\n            });\n        };\n        _this.onMouseMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.clientX, e.clientY);\n        };\n        _this.onTouchMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n        };\n        _this.onKeyDown = function (e) {\n            var _a = _this.props, values = _a.values, onChange = _a.onChange, step = _a.step, rtl = _a.rtl;\n            var isChanged = _this.state.isChanged;\n            var index = _this.getTargetIndex(e.nativeEvent);\n            var inverter = rtl ? -1 : 1;\n            if (index === -1)\n                return;\n            if (INCREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange(utils_1.replaceAt(values, index, _this.normalizeValue(values[index] + inverter * (e.key === 'PageUp' ? step * 10 : step), index)));\n            }\n            else if (DECREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange(utils_1.replaceAt(values, index, _this.normalizeValue(values[index] -\n                    inverter * (e.key === 'PageDown' ? step * 10 : step), index)));\n            }\n            else if (e.key === 'Tab') {\n                _this.setState({ draggedThumbIndex: -1 }, function () {\n                    // If key pressed when thumb was moving, fire onFinalChange\n                    if (isChanged) {\n                        _this.fireOnFinalChange();\n                    }\n                });\n            }\n            else {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            }\n        };\n        _this.onKeyUp = function (e) {\n            var isChanged = _this.state.isChanged;\n            _this.setState({\n                draggedThumbIndex: -1\n            }, function () {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            });\n        };\n        _this.onMove = function (clientX, clientY) {\n            var _a = _this.state, draggedThumbIndex = _a.draggedThumbIndex, draggedTrackPos = _a.draggedTrackPos;\n            var _b = _this.props, direction = _b.direction, min = _b.min, max = _b.max, onChange = _b.onChange, values = _b.values, step = _b.step, rtl = _b.rtl;\n            if (draggedThumbIndex === -1 && draggedTrackPos[0] === -1 && draggedTrackPos[1] === -1)\n                return null;\n            var trackElement = _this.trackRef.current;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackLength = utils_1.isVertical(direction)\n                ? trackRect.height\n                : trackRect.width;\n            if (draggedTrackPos[0] !== -1 && draggedTrackPos[1] !== -1) {\n                // calculate how much it moved since the last update\n                var dX = clientX - draggedTrackPos[0];\n                var dY = clientY - draggedTrackPos[1];\n                // calculate the delta of the value\n                var deltaValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                    case types_1.Direction.Left:\n                        deltaValue = (dX / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Down:\n                    case types_1.Direction.Up:\n                        deltaValue = (dY / trackLength) * (max - min) + min;\n                        break;\n                    default:\n                        utils_1.assertUnreachable(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    deltaValue *= -1;\n                }\n                if (Math.abs(deltaValue) >= step / 2) {\n                    // adjust delta so it fits into the range\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        if ((values[i] === max && Math.sign(deltaValue) === 1) || (values[i] === min && Math.sign(deltaValue) === -1))\n                            return;\n                        var thumbValue = values[i] + deltaValue;\n                        if (thumbValue > max)\n                            deltaValue = max - values[i];\n                        else if (thumbValue < min)\n                            deltaValue = min - values[i];\n                    }\n                    // add the delta to each thumb\n                    var newValues = values.slice(0);\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        newValues = utils_1.replaceAt(newValues, i, _this.normalizeValue(values[i] + deltaValue, i));\n                    }\n                    _this.setState({\n                        draggedTrackPos: [clientX, clientY],\n                    });\n                    onChange(newValues);\n                }\n            }\n            else {\n                var newValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        newValue =\n                            ((clientX - trackRect.left) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Left:\n                        newValue =\n                            ((trackLength - (clientX - trackRect.left)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    case types_1.Direction.Down:\n                        newValue =\n                            ((clientY - trackRect.top) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Up:\n                        newValue =\n                            ((trackLength - (clientY - trackRect.top)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    default:\n                        utils_1.assertUnreachable(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    newValue = max + min - newValue;\n                }\n                if (Math.abs(values[draggedThumbIndex] - newValue) >= step / 2) {\n                    onChange(utils_1.replaceAt(values, draggedThumbIndex, _this.normalizeValue(newValue, draggedThumbIndex)));\n                }\n            }\n        };\n        _this.normalizeValue = function (value, index) {\n            var _a = _this.props, min = _a.min, max = _a.max, step = _a.step, allowOverlap = _a.allowOverlap, values = _a.values;\n            return utils_1.normalizeValue(value, index, min, max, step, allowOverlap, values);\n        };\n        _this.onEnd = function (e) {\n            e.preventDefault();\n            document.removeEventListener('mousemove', _this.schdOnMouseMove);\n            document.removeEventListener('touchmove', _this.schdOnTouchMove);\n            document.removeEventListener('mouseup', _this.schdOnEnd);\n            document.removeEventListener('touchend', _this.schdOnEnd);\n            document.removeEventListener('touchcancel', _this.schdOnEnd);\n            if (_this.state.draggedThumbIndex === -1 && _this.state.draggedTrackPos[0] === -1 && _this.state.draggedTrackPos[1] === -1)\n                return null;\n            _this.setState({ draggedThumbIndex: -1, draggedTrackPos: [-1, -1] }, function () {\n                _this.fireOnFinalChange();\n            });\n        };\n        _this.fireOnFinalChange = function () {\n            _this.setState({ isChanged: false });\n            var _a = _this.props, onFinalChange = _a.onFinalChange, values = _a.values;\n            if (onFinalChange) {\n                onFinalChange(values);\n            }\n        };\n        _this.calculateMarkOffsets = function () {\n            if (!_this.props.renderMark ||\n                !_this.trackRef ||\n                _this.trackRef.current === null)\n                return;\n            var elStyles = window.getComputedStyle(_this.trackRef.current);\n            var trackWidth = parseInt(elStyles.width, 10);\n            var trackHeight = parseInt(elStyles.height, 10);\n            var paddingLeft = parseInt(elStyles.paddingLeft, 10);\n            var paddingTop = parseInt(elStyles.paddingTop, 10);\n            var res = [];\n            for (var i = 0; i < _this.numOfMarks + 1; i++) {\n                var markHeight = 9999;\n                var markWidth = 9999;\n                if (_this.markRefs[i].current) {\n                    var markRect = _this.markRefs[i].current.getBoundingClientRect();\n                    markHeight = markRect.height;\n                    markWidth = markRect.width;\n                }\n                if (_this.props.direction === types_1.Direction.Left ||\n                    _this.props.direction === types_1.Direction.Right) {\n                    res.push([\n                        Math.round((trackWidth / _this.numOfMarks) * i + paddingLeft - markWidth / 2),\n                        -Math.round((markHeight - trackHeight) / 2)\n                    ]);\n                }\n                else {\n                    res.push([\n                        Math.round((trackHeight / _this.numOfMarks) * i + paddingTop - markHeight / 2),\n                        -Math.round((markWidth - trackWidth) / 2)\n                    ]);\n                }\n            }\n            _this.setState({ markOffsets: res });\n        };\n        _this.numOfMarks = (props.max - props.min) / _this.props.step;\n        _this.schdOnMouseMove = utils_1.schd(_this.onMouseMove);\n        _this.schdOnTouchMove = utils_1.schd(_this.onTouchMove);\n        _this.schdOnEnd = utils_1.schd(_this.onEnd);\n        _this.schdOnResize = utils_1.schd(_this.onResize);\n        _this.thumbRefs = props.values.map(function () { return React.createRef(); });\n        for (var i = 0; i < _this.numOfMarks + 1; i++) {\n            _this.markRefs[i] = React.createRef();\n        }\n        if (!utils_1.isStepDivisible(props.min, props.max, props.step)) {\n            console.warn('The difference of `max` and `min` must be divisible by `step`');\n        }\n        if (props.step === 0) {\n            throw new Error('\"step\" property should be a positive number');\n        }\n        return _this;\n    }\n    Range.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, values = _a.values, min = _a.min, step = _a.step;\n        this.resizeObserver = window.ResizeObserver\n            ? new window.ResizeObserver(this.schdOnResize)\n            : {\n                observe: function () { return window.addEventListener('resize', _this.schdOnResize); },\n                unobserve: function () {\n                    return window.removeEventListener('resize', _this.schdOnResize);\n                }\n            };\n        document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        document.addEventListener('mousedown', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        !this.props.allowOverlap && utils_1.checkInitialOverlap(this.props.values);\n        this.props.values.forEach(function (value) {\n            return utils_1.checkBoundaries(value, _this.props.min, _this.props.max);\n        });\n        this.resizeObserver.observe(this.trackRef.current);\n        utils_1.translateThumbs(this.getThumbs(), this.getOffsets(), this.props.rtl);\n        this.calculateMarkOffsets();\n        values.forEach(function (value) {\n            if (!utils_1.isStepDivisible(min, value, step)) {\n                console.warn('The `values` property is in conflict with the current `step`, `min` and `max` properties. Please provide values that are accessible using the min, max an step values');\n            }\n        });\n    };\n    Range.prototype.componentDidUpdate = function (prevProps) {\n        utils_1.translateThumbs(this.getThumbs(), this.getOffsets(), this.props.rtl);\n    };\n    Range.prototype.componentWillUnmount = function () {\n        var options = {\n            passive: false\n        };\n        document.removeEventListener('mousedown', this.onMouseOrTouchStart, options);\n        document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n        document.removeEventListener('touchend', this.schdOnEnd);\n        this.resizeObserver.unobserve(this.trackRef.current);\n    };\n    Range.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, renderTrack = _a.renderTrack, renderThumb = _a.renderThumb, _b = _a.renderMark, renderMark = _b === void 0 ? function () { return null; } : _b, values = _a.values, min = _a.min, max = _a.max, allowOverlap = _a.allowOverlap, disabled = _a.disabled;\n        var _c = this.state, draggedThumbIndex = _c.draggedThumbIndex, thumbZIndexes = _c.thumbZIndexes, markOffsets = _c.markOffsets;\n        return renderTrack({\n            props: {\n                style: {\n                    // creates stacking context that prevents z-index applied to thumbs\n                    // interfere with other elements\n                    transform: 'scale(1)',\n                    cursor: draggedThumbIndex > -1\n                        ? 'grabbing'\n                        : this.props.draggableTrack\n                            ? utils_1.isVertical(this.props.direction)\n                                ? 'ns-resize'\n                                : 'ew-resize'\n                            : values.length === 1 && !disabled\n                                ? 'pointer'\n                                : 'inherit'\n                },\n                onMouseDown: disabled ? utils_1.voidFn : this.onMouseDownTrack,\n                onTouchStart: disabled ? utils_1.voidFn : this.onTouchStartTrack,\n                ref: this.trackRef\n            },\n            isDragged: this.state.draggedThumbIndex > -1,\n            disabled: disabled,\n            children: __spreadArrays(markOffsets.map(function (offset, index) {\n                return renderMark({\n                    props: {\n                        style: _this.props.direction === types_1.Direction.Left ||\n                            _this.props.direction === types_1.Direction.Right\n                            ? {\n                                position: 'absolute',\n                                left: offset[0] + \"px\",\n                                marginTop: offset[1] + \"px\"\n                            }\n                            : {\n                                position: 'absolute',\n                                top: offset[0] + \"px\",\n                                marginLeft: offset[1] + \"px\"\n                            },\n                        key: \"mark\" + index,\n                        ref: _this.markRefs[index]\n                    },\n                    index: index\n                });\n            }), values.map(function (value, index) {\n                var isDragged = _this.state.draggedThumbIndex === index;\n                return renderThumb({\n                    index: index,\n                    value: value,\n                    isDragged: isDragged,\n                    props: {\n                        style: {\n                            position: 'absolute',\n                            zIndex: thumbZIndexes[index],\n                            cursor: disabled ? 'inherit' : isDragged ? 'grabbing' : 'grab',\n                            userSelect: 'none',\n                            touchAction: 'none',\n                            WebkitUserSelect: 'none',\n                            MozUserSelect: 'none',\n                            msUserSelect: 'none'\n                        },\n                        key: index,\n                        tabIndex: disabled ? undefined : 0,\n                        'aria-valuemax': allowOverlap ? max : values[index + 1] || max,\n                        'aria-valuemin': allowOverlap ? min : values[index - 1] || min,\n                        'aria-valuenow': value,\n                        draggable: false,\n                        ref: _this.thumbRefs[index],\n                        role: 'slider',\n                        onKeyDown: disabled ? utils_1.voidFn : _this.onKeyDown,\n                        onKeyUp: disabled ? utils_1.voidFn : _this.onKeyUp\n                    }\n                });\n            }))\n        });\n    };\n    Range.defaultProps = {\n        step: 1,\n        direction: types_1.Direction.Right,\n        rtl: false,\n        disabled: false,\n        allowOverlap: false,\n        draggableTrack: false,\n        min: 0,\n        max: 100\n    };\n    return Range;\n}(React.Component));\nexports.default = Range;\n"],"sourceRoot":""}